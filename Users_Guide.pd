#N canvas 554 176 970 637 10;
#X obj 227 -80 cnv 15 15 15 empty \$0-title PDX - User's Guide  20
12 1 46 -262144 -66577 0;
#X obj 159 -21 cnv 15 15 15 empty \$0-subtitle A collection of vanilla-compatible Pd extensions. 
20 12 1 26 -262144 -66577 0;
#X obj -10 193 bng 80 250 50 0 \$0-page_down empty <- 14 37 2 60 -262144
-33289 -128992;
#X obj 841 185 bng 80 250 50 0 \$0-page_up empty -> 14 37 2 60 -262144
-33289 -128992;
#X obj 140 453 hradio 40 1 0 16 \$0-page_number \$0-page_number_ empty
0 -8 0 10 -262144 -1 -1 12;
#N canvas 142 22 1195 956 backend 0;
#X obj 11 74 list prepend label;
#X obj 11 94 list trim;
#X obj 11 134 s \$0-title;
#X msg 11 34 PDX - User's Guide;
#X obj 11 -8 loadbang;
#N canvas 1150 205 450 300 lsymbol 0;
#X obj -8 -16 inlet;
#X obj -8 241 outlet;
#N canvas 848 97 152 141 liter 0;
#X obj -4 -432 list split 1;
#X obj -3 -392 list;
#X obj -4 -412 t b a;
#X obj 23 -372 outlet ELEMENT;
#X obj -4 -470 inlet LIST_TO_ITERATE;
#X obj -4 -451 t a;
#X connect 0 0 2 0;
#X connect 0 1 1 1;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 2 1 3 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X restore 11 34 pd liter;
#X obj 11 60 t b a;
#X obj 39 184 makefilename;
#X msg 11 88 32;
#X msg 39 149 set \$1%c;
#X obj -8 217 symbol;
#X msg 110 74 set \$1%s;
#X obj 39 117 makefilename %s;
#X obj -8 5 t b a b;
#X msg 76 33 set %s;
#X connect 0 0 10 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 3 1 9 0;
#X connect 4 0 7 1;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 1 0;
#X connect 8 0 9 0;
#X connect 9 0 6 0;
#X connect 10 0 7 0;
#X connect 10 1 2 0;
#X connect 10 2 11 0;
#X connect 11 0 9 0;
#X connect 11 0 4 0;
#X restore 11 54 pd lsymbol;
#X obj 11 14 t b b;
#X obj 348 80 list prepend label;
#X obj 348 100 list trim;
#X obj 348 -2 loadbang;
#N canvas 1150 205 450 300 lsymbol 0;
#X obj -8 -16 inlet;
#X obj -8 241 outlet;
#N canvas 848 97 152 141 liter 0;
#X obj -4 -432 list split 1;
#X obj -3 -392 list;
#X obj -4 -412 t b a;
#X obj 23 -372 outlet ELEMENT;
#X obj -4 -470 inlet LIST_TO_ITERATE;
#X obj -4 -451 t a;
#X connect 0 0 2 0;
#X connect 0 1 1 1;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 2 1 3 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X restore 11 34 pd liter;
#X obj 11 60 t b a;
#X obj 39 184 makefilename;
#X msg 11 88 32;
#X msg 39 149 set \$1%c;
#X obj -8 217 symbol;
#X msg 110 74 set \$1%s;
#X obj 39 117 makefilename %s;
#X obj -8 5 t b a b;
#X msg 76 33 set %s;
#X connect 0 0 10 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 3 1 9 0;
#X connect 4 0 7 1;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 1 0;
#X connect 8 0 9 0;
#X connect 9 0 6 0;
#X connect 10 0 7 0;
#X connect 10 1 2 0;
#X connect 10 2 11 0;
#X connect 11 0 9 0;
#X connect 11 0 4 0;
#X restore 348 60 pd lsymbol;
#X obj 348 20 t b b;
#X obj 348 140 s \$0-subtitle;
#X msg 375 120 vis_size 15 \, size 15 \, label_font 1 26 \, color 0
32;
#X msg 38 114 vis_size 15 \, size 15 \, label_font 1 46 \, color 0
32;
#N canvas 365 663 450 300 counter 0;
#X obj 49 155 f;
#X obj 110 192 + 1;
#X obj 51 202 - 1;
#X obj 111 158 f;
#X obj 15 24 inlet -;
#X obj 148 30 inlet +;
#X obj 77 237 outlet;
#X obj 67 114 t f f;
#X obj 31 117 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 148 112 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 67 24 inlet set;
#X connect 0 0 2 0;
#X connect 1 0 0 1;
#X connect 1 0 3 1;
#X connect 1 0 6 0;
#X connect 2 0 0 1;
#X connect 2 0 3 1;
#X connect 2 0 6 0;
#X connect 3 0 1 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 7 0 3 1;
#X connect 7 0 0 1;
#X connect 7 1 6 0;
#X connect 8 0 0 0;
#X connect 9 0 3 0;
#X connect 10 0 7 0;
#X restore 257 290 pd counter;
#X obj 191 189 r \$0-page_down;
#X obj 394 195 r \$0-page_up;
#X obj 285 178 r \$0-page_number;
#X obj 191 249 spigot;
#X obj 257 311 t f f f;
#X obj 394 266 spigot;
#X floatatom 257 383 5 0 0 0 - - -;
#X obj 285 251 spigot;
#X obj 257 339 t f b f b;
#X msg 332 226 1;
#X msg 306 226 0;
#X obj 291 360 s \$0-page_number_;
#X obj 427 241 < 15;
#X obj 224 224 > 0;
#X obj 124 224 loadbang;
#X msg 124 246 0;
#X obj 257 471 sel 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15;
#X obj 257 404 t f b;
#X msg 284 426 clear;
#X obj 284 448 s pd-\$0-window;
#X obj 795 1053 s pd-\$0-window;
#X msg -1461 524 obj 237 22 cnv 15 15 15 empty empty Getting_Started
20 12 1 32 -262144 -66577 0 \, text 6 8 Page 2 \, text 193 65 You need
to add the folder containing all the pdx patches into Pd's search path
to start using the library in your own projects. \, text 193 113 Click
"Pd" (or "Pd-extended") in the top navigation bar and then click on
"Preferences". This contains all the paths to each folder of patches
that Pd will search through when you make a new object. \, text 193
181 Click "New" and navigate to the pdx library on your computer. Click
on the folder named "patches" and then click "Choose". This should
add that path to the internal list of paths when you click "Ok" or
"Apply". \, text 196 258 Close Pd and then re-open the User's Guide.
The patches below should successfully load if it worked: \, obj 289
357 number \, obj 256 318 view~ \, obj 331 321 number~ \, obj 431 320
guiadsr \, obj 175 300 gain~ \,;
#N canvas 166 23 1049 805 \$0-gatedemo 0;
#X obj 110 30 cnv 15 15 15 empty empty Gates 20 12 1 32 -262144 -66577
0;
#X text -183 76 The gates in pdx have similar behavior to the gates
in max/msp. The left inlet sets the active gate \, and the right inlet
is the input to send to the active gate.;
#X text -180 138 By default there are 31 premade gates (2 - 32). However
\, you can easily make a gate of any size you want with the [gatemaker]
patch.;
#X obj -129 234 gate2;
#X floatatom -88 205 5 0 0 0 - - -;
#X msg -166 203 1;
#X msg -139 203 2;
#X floatatom -166 263 5 0 0 0 - - -;
#X floatatom -88 262 5 0 0 0 - - -;
#X floatatom 21 201 5 1 5 0 Set_Gate: - -;
#X floatatom 138 200 5 0 0 0 Input_Value: - -;
#X obj 76 230 gate5;
#X floatatom 46 256 5 0 0 0 - - -;
#X floatatom 81 256 5 0 0 0 - - -;
#X floatatom 115 257 5 0 0 0 - - -;
#X floatatom 151 256 5 0 0 0 - - -;
#X floatatom 185 256 5 0 0 0 - - -;
#X text -122 302 You can use underscores to make the object longer
\, making it easier to distinguish adjacent gates when wiring objects
to them:;
#X floatatom -179 357 5 1 20 0 Set_Gate: - -;
#X floatatom 178 359 5 0 0 0 Input_Value: - -;
#X floatatom -310 427 5 0 0 0 - - -;
#X floatatom -276 427 5 0 0 0 - - -;
#X floatatom -242 427 5 0 0 0 - - -;
#X floatatom -208 427 5 0 0 0 - - -;
#X floatatom -174 427 5 0 0 0 - - -;
#X floatatom -140 427 5 0 0 0 - - -;
#X floatatom -106 427 5 0 0 0 - - -;
#X floatatom -72 427 5 0 0 0 - - -;
#X floatatom -38 427 5 0 0 0 - - -;
#X floatatom -4 427 5 0 0 0 - - -;
#X floatatom 31 427 5 0 0 0 - - -;
#X floatatom 65 427 5 0 0 0 - - -;
#X floatatom 99 427 5 0 0 0 - - -;
#X floatatom 133 427 5 0 0 0 - - -;
#X floatatom 167 427 5 0 0 0 - - -;
#X floatatom 201 427 5 0 0 0 - - -;
#X floatatom 235 427 5 0 0 0 - - -;
#X floatatom 269 427 5 0 0 0 - - -;
#X floatatom 303 427 5 0 0 0 - - -;
#X floatatom 337 427 5 0 0 0 - - -;
#X obj -179 383 gate20 _____________________________________________________
;
#X text 276 79 If you only want a simple 2-way gate toggle \, there
is also another gate \, [ggate]. This is also a clone of the equivalently-named
object in max/msp.;
#X text 277 142 [ggate] takes the input value in the left inlet. Set
the active gate with the right inlet. [ggate] only takes a 0/1 toggle:
;
#X obj 344 245 ggate;
#X obj 386 199 tgl 15 0 empty empty Select_Gate: -75 7 0 10 -262144
-1 -1 0 1;
#X floatatom 327 219 5 0 0 0 Input_Value: - -;
#X floatatom 335 281 5 0 0 0 - - -;
#X floatatom 381 278 5 0 0 0 - - -;
#X obj 505 259 ggate;
#X msg 565 216 0;
#X msg 592 216 1;
#X msg 447 215 foo;
#X msg 477 216 bar;
#X obj 485 287 lset;
#X obj 550 289 lset;
#X msg 506 216 baz;
#X text 552 195 Select Gate:;
#X text 455 195 Input:;
#X msg 553 323;
#X msg 487 324;
#X text 117 454 There are also signal gates:;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-left_gate 1000 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 999 -1 200 140 1;
#X restore -278 656 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-right_gate 1000 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 999 -1 200 140 1 0 0;
#X restore 136 655 graph;
#X msg -82 488 1;
#X msg -42 488 2;
#X obj -7 519 gate3~;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-middle_gate 1000 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X coords 0 1 999 -1 200 140 1 0 0;
#X restore -71 655 graph;
#X msg -7 488 3;
#X obj -155 488 loadbang;
#X obj -7 548 tabwrite~ \$0-left_gate;
#X obj 9 571 tabwrite~ \$0-middle_gate;
#X obj 26 593 tabwrite~ \$0-right_gate;
#X obj -155 513 metro 70;
#X obj 35 488 osc~ 30;
#X obj 416 539 ggate~;
#X obj 457 503 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 358 498 number~;
#X obj 373 575 view~;
#X obj 454 573 view~;
#X obj 572 515 gate4~;
#X obj 570 554 gate8~ _________;
#X text 434 667 See Also:;
#X obj 460 700 gatemaker 4;
#X obj 459 729 gatemaker~ 3;
#X text 335 358 Notice that with [ggate] \, you select the active gate
with the right inlet \, whereas with the other gates you set the active
gate with the left inlet.;
#X obj 572 732 gatemaker~ 50;
#X connect 3 0 7 0;
#X connect 3 1 8 0;
#X connect 4 0 3 1;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 9 0 11 0;
#X connect 10 0 11 1;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 11 2 14 0;
#X connect 11 3 15 0;
#X connect 11 4 16 0;
#X connect 18 0 40 0;
#X connect 19 0 40 1;
#X connect 40 0 20 0;
#X connect 40 1 21 0;
#X connect 40 2 22 0;
#X connect 40 3 23 0;
#X connect 40 4 24 0;
#X connect 40 5 25 0;
#X connect 40 6 26 0;
#X connect 40 7 27 0;
#X connect 40 8 28 0;
#X connect 40 9 29 0;
#X connect 40 10 30 0;
#X connect 40 11 31 0;
#X connect 40 12 32 0;
#X connect 40 13 33 0;
#X connect 40 14 34 0;
#X connect 40 15 35 0;
#X connect 40 16 36 0;
#X connect 40 17 37 0;
#X connect 40 18 38 0;
#X connect 40 19 39 0;
#X connect 43 0 46 0;
#X connect 43 1 47 0;
#X connect 44 0 43 1;
#X connect 45 0 43 0;
#X connect 48 0 53 0;
#X connect 48 1 54 0;
#X connect 49 0 48 1;
#X connect 50 0 48 1;
#X connect 51 0 48 0;
#X connect 52 0 48 0;
#X connect 53 0 59 0;
#X connect 54 0 58 0;
#X connect 55 0 48 0;
#X connect 63 0 65 0;
#X connect 64 0 65 0;
#X connect 65 0 69 0;
#X connect 65 1 70 0;
#X connect 65 2 71 0;
#X connect 67 0 65 0;
#X connect 68 0 72 0;
#X connect 72 0 69 0;
#X connect 72 0 70 0;
#X connect 72 0 71 0;
#X connect 73 0 65 1;
#X connect 74 0 77 0;
#X connect 74 1 78 0;
#X connect 75 0 74 1;
#X connect 76 0 74 0;
#X restore -101 248 pd \$0-gatedemo;
#N canvas 174 23 1078 832 \$0-switchdemo 0;
#X obj 120 40 cnv 15 15 15 empty empty Switches 20 12 1 32 -262144
-66577 0;
#X floatatom -154 209 5 0 0 0 - - -;
#X msg -224 207 1;
#X msg -197 207 2;
#X floatatom -167 268 5 0 0 0 - - -;
#X floatatom 27 209 5 1 4 0 Set_Switch: - -;
#X floatatom 86 264 5 0 0 0 - - -;
#X floatatom 82 205 5 0 0 0 - - -;
#X floatatom 116 206 5 0 0 0 - - -;
#X floatatom 152 205 5 0 0 0 - - -;
#X floatatom 186 205 5 0 0 0 - - -;
#X text -132 310 You can use underscores to make the object longer
\, making it easier to distinguish adjacent gates when wiring objects
to them:;
#X floatatom -222 383 5 1 14 0 Set_Switch: - -;
#X floatatom -168 445 5 0 0 0 - - -;
#X floatatom -165 382 5 0 0 0 - - -;
#X floatatom -131 382 5 0 0 0 - - -;
#X floatatom -97 382 5 0 0 0 - - -;
#X floatatom -63 382 5 0 0 0 - - -;
#X floatatom -28 382 5 0 0 0 - - -;
#X floatatom 6 382 5 0 0 0 - - -;
#X floatatom 40 382 5 0 0 0 - - -;
#X floatatom 74 382 5 0 0 0 - - -;
#X floatatom 108 382 5 0 0 0 - - -;
#X floatatom 142 382 5 0 0 0 - - -;
#X floatatom 176 382 5 0 0 0 - - -;
#X floatatom 210 382 5 0 0 0 - - -;
#X floatatom 244 382 5 0 0 0 - - -;
#X floatatom 278 382 5 0 0 0 - - -;
#X obj 399 209 tgl 15 0 empty empty Select_Switch: -85 7 0 10 -262144
-1 -1 0 1;
#X floatatom 318 237 5 0 0 0 Input_Values: - -;
#X floatatom 355 308 5 0 0 0 - - -;
#X msg 612 218 0;
#X msg 639 218 1;
#X msg 465 223 foo;
#X msg 495 224 bar;
#X obj 515 292 lset;
#X text 496 203 Input:;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-switch_output 1000 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ;
#X coords 0 1 999 -1 200 140 1 0 0;
#X restore -20 652 graph;
#X msg -123 494 1;
#X msg -83 494 2;
#X msg -48 494 3;
#X obj -195 498 loadbang;
#X obj -195 523 metro 70;
#X obj 9 496 osc~ 30;
#X obj 502 513 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 351 508 number~;
#X obj 426 584 view~;
#X text 444 677 See Also:;
#X obj -167 242 switch2;
#X text -173 86 The switches in pdx have similar behavior to the gates
in max/msp. The left inlet sets the active switch \, and the right
inlets are the input to select from.;
#X text -170 140 By default there are 31 premade switches (2 - 32).
However \, you can easily make a switch of any size you want with the
[switchmaker] patch.;
#X text 286 89 If you only want a simple 2-way switch toggle \, there
is also another switch \, [gswitch] This is also a clone of the equivalently-named
object in max/msp.;
#X obj 355 280 gswitch;
#X text 287 152 [gswitch] takes the input value in the left inlets.
Set the active switch with the right inlet. [gswitch] only takes a
0/1 toggle:;
#X floatatom 359 238 5 0 0 0 - - -;
#X obj 515 269 gswitch;
#X text 599 197 Select Switch:;
#X msg 529 225 one;
#X msg 558 226 two;
#X msg 515 314;
#X text 344 341 Notice that with [gwitch] \, you select the active
switch with the right inlet \, whereas with the other gates you set
the active gate with the left inlet.;
#X obj 86 240 switch4;
#X floatatom -117 209 5 0 0 0 - - -;
#X text 94 182 Input Values:;
#X obj -169 423 switch14 ___________________________________________________
;
#X text -6 359 Input Values;
#X text 127 464 There are also signal switches:;
#X obj 3 564 switch3~;
#X text -117 471 Select Switch:;
#X obj 62 495 phasor~ 30;
#X obj 133 495 osc~ 30;
#X obj 3 596 tabwrite~ \$0-switch_output;
#X obj 426 549 gswitch~;
#X obj 429 507 number~;
#X obj 582 525 switch4~;
#X obj 580 564 switch8~ ___________;
#X obj 470 710 switchmaker 4;
#X obj 436 742 switchmaker~ 6;
#X obj 364 772 switchmaker~ 32 ___________________________________________
;
#X obj 133 515 clip~ -0.01 0.01;
#X obj 133 535 *~ 100;
#X obj 62 515 *~ 2;
#X obj 62 536 -~ 1;
#X connect 1 0 48 1;
#X connect 2 0 48 0;
#X connect 3 0 48 0;
#X connect 5 0 61 0;
#X connect 7 0 61 1;
#X connect 8 0 61 2;
#X connect 9 0 61 3;
#X connect 10 0 61 4;
#X connect 12 0 64 0;
#X connect 14 0 64 1;
#X connect 15 0 64 2;
#X connect 16 0 64 3;
#X connect 17 0 64 4;
#X connect 18 0 64 5;
#X connect 19 0 64 6;
#X connect 20 0 64 7;
#X connect 21 0 64 8;
#X connect 22 0 64 9;
#X connect 23 0 64 10;
#X connect 24 0 64 11;
#X connect 25 0 64 12;
#X connect 26 0 64 13;
#X connect 27 0 64 14;
#X connect 28 0 52 2;
#X connect 29 0 52 0;
#X connect 31 0 55 2;
#X connect 32 0 55 2;
#X connect 33 0 55 0;
#X connect 34 0 55 0;
#X connect 35 0 59 0;
#X connect 38 0 67 0;
#X connect 39 0 67 0;
#X connect 40 0 67 0;
#X connect 41 0 42 0;
#X connect 42 0 71 0;
#X connect 43 0 67 1;
#X connect 44 0 72 2;
#X connect 45 0 72 0;
#X connect 48 0 4 0;
#X connect 52 0 30 0;
#X connect 54 0 52 1;
#X connect 55 0 35 0;
#X connect 57 0 55 1;
#X connect 58 0 55 1;
#X connect 61 0 6 0;
#X connect 62 0 48 2;
#X connect 64 0 13 0;
#X connect 67 0 71 0;
#X connect 69 0 81 0;
#X connect 70 0 79 0;
#X connect 72 0 46 0;
#X connect 73 0 72 1;
#X connect 79 0 80 0;
#X connect 80 0 67 3;
#X connect 81 0 82 0;
#X connect 82 0 67 2;
#X restore -98 278 pd \$0-switchdemo;
#N canvas 86 79 1257 726 \$0-gatemakerdemo 0;
#X obj 367 34 cnv 15 15 15 empty empty Custom_Gates_&_Switches 20 12
1 32 -262144 -66577 0;
#X text 83 103 If you want a gate or switch that's longer than any
of the premade ones \, you can create a custom one using the patches
[gatemaker] \, [gatemaker~] \, [switchmaker] \, and [switchmaker~]
;
#X text 86 163 These patches are macros that create a gate or switch
of any length that you can then copy into a subpatch for use later.
You can't actually use the macro patches themselves \, however.;
#X text 92 250 To make a gate or a switch \, specify the length as
a creation argument:;
#X obj 166 295 gatemaker 7;
#X text 92 405 The easiest way to do this is to select everything (Command/Ctrl-A)
\, then deselect the four objects at the top (by shift-clicking).;
#X text 94 458 You can then copy & paste the objects into a new subpatch.
;
#X text 92 324 Click the object to open it \, then copy all its contents
except for the four objects at the top ([namecanvas] \, [loadbang]
\, [f \$1] \, [pd \$0-setup]). It's very important that you don't copy
the 4 objects at the top — it could mess up your patch if you do.
;
#X text 207 513 Examples:;
#X obj 116 541 gatemaker 50;
#N canvas 6 660 1914 277 gatemaker_50_copy 0;
#X obj 46 48 inlet;
#X obj 117 48 inlet;
#X obj 37 160 == 1;
#X obj 10 185 spigot;
#X obj 10 210 outlet;
#X obj 137 160 == 2;
#X obj 110 185 spigot;
#X obj 110 210 outlet;
#X obj 237 160 == 3;
#X obj 210 185 spigot;
#X obj 210 210 outlet;
#X obj 337 160 == 4;
#X obj 310 185 spigot;
#X obj 310 210 outlet;
#X obj 437 160 == 5;
#X obj 410 185 spigot;
#X obj 410 210 outlet;
#X obj 537 160 == 6;
#X obj 510 185 spigot;
#X obj 510 210 outlet;
#X obj 637 160 == 7;
#X obj 610 185 spigot;
#X obj 610 210 outlet;
#X obj 737 160 == 8;
#X obj 710 185 spigot;
#X obj 710 210 outlet;
#X obj 837 160 == 9;
#X obj 810 185 spigot;
#X obj 810 210 outlet;
#X obj 937 160 == 10;
#X obj 910 185 spigot;
#X obj 910 210 outlet;
#X obj 1037 160 == 11;
#X obj 1010 185 spigot;
#X obj 1010 210 outlet;
#X obj 1137 160 == 12;
#X obj 1110 185 spigot;
#X obj 1110 210 outlet;
#X obj 1237 160 == 13;
#X obj 1210 185 spigot;
#X obj 1210 210 outlet;
#X obj 1337 160 == 14;
#X obj 1310 185 spigot;
#X obj 1310 210 outlet;
#X obj 1437 160 == 15;
#X obj 1410 185 spigot;
#X obj 1410 210 outlet;
#X obj 1537 160 == 16;
#X obj 1510 185 spigot;
#X obj 1510 210 outlet;
#X obj 1637 160 == 17;
#X obj 1610 185 spigot;
#X obj 1610 210 outlet;
#X obj 1737 160 == 18;
#X obj 1710 185 spigot;
#X obj 1710 210 outlet;
#X obj 1837 160 == 19;
#X obj 1810 185 spigot;
#X obj 1810 210 outlet;
#X obj 1937 160 == 20;
#X obj 1910 185 spigot;
#X obj 1910 210 outlet;
#X obj 2037 160 == 21;
#X obj 2010 185 spigot;
#X obj 2010 210 outlet;
#X obj 2137 160 == 22;
#X obj 2110 185 spigot;
#X obj 2110 210 outlet;
#X obj 2237 160 == 23;
#X obj 2210 185 spigot;
#X obj 2210 210 outlet;
#X obj 2337 160 == 24;
#X obj 2310 185 spigot;
#X obj 2310 210 outlet;
#X obj 2437 160 == 25;
#X obj 2410 185 spigot;
#X obj 2410 210 outlet;
#X obj 2537 160 == 26;
#X obj 2510 185 spigot;
#X obj 2510 210 outlet;
#X obj 2637 160 == 27;
#X obj 2610 185 spigot;
#X obj 2610 210 outlet;
#X obj 2737 160 == 28;
#X obj 2710 185 spigot;
#X obj 2710 210 outlet;
#X obj 2837 160 == 29;
#X obj 2810 185 spigot;
#X obj 2810 210 outlet;
#X obj 2937 160 == 30;
#X obj 2910 185 spigot;
#X obj 2910 210 outlet;
#X obj 3037 160 == 31;
#X obj 3010 185 spigot;
#X obj 3010 210 outlet;
#X obj 3137 160 == 32;
#X obj 3110 185 spigot;
#X obj 3110 210 outlet;
#X obj 3237 160 == 33;
#X obj 3210 185 spigot;
#X obj 3210 210 outlet;
#X obj 3337 160 == 34;
#X obj 3310 185 spigot;
#X obj 3310 210 outlet;
#X obj 3437 160 == 35;
#X obj 3410 185 spigot;
#X obj 3410 210 outlet;
#X obj 3537 160 == 36;
#X obj 3510 185 spigot;
#X obj 3510 210 outlet;
#X obj 3637 160 == 37;
#X obj 3610 185 spigot;
#X obj 3610 210 outlet;
#X obj 3737 160 == 38;
#X obj 3710 185 spigot;
#X obj 3710 210 outlet;
#X obj 3837 160 == 39;
#X obj 3810 185 spigot;
#X obj 3810 210 outlet;
#X obj 3937 160 == 40;
#X obj 3910 185 spigot;
#X obj 3910 210 outlet;
#X obj 4037 160 == 41;
#X obj 4010 185 spigot;
#X obj 4010 210 outlet;
#X obj 4137 160 == 42;
#X obj 4110 185 spigot;
#X obj 4110 210 outlet;
#X obj 4237 160 == 43;
#X obj 4210 185 spigot;
#X obj 4210 210 outlet;
#X obj 4337 160 == 44;
#X obj 4310 185 spigot;
#X obj 4310 210 outlet;
#X obj 4437 160 == 45;
#X obj 4410 185 spigot;
#X obj 4410 210 outlet;
#X obj 4537 160 == 46;
#X obj 4510 185 spigot;
#X obj 4510 210 outlet;
#X obj 4637 160 == 47;
#X obj 4610 185 spigot;
#X obj 4610 210 outlet;
#X obj 4737 160 == 48;
#X obj 4710 185 spigot;
#X obj 4710 210 outlet;
#X obj 4837 160 == 49;
#X obj 4810 185 spigot;
#X obj 4810 210 outlet;
#X obj 4937 160 >= 50;
#X obj 4910 185 spigot;
#X obj 4910 210 outlet;
#X connect 0 0 2 0;
#X connect 0 0 5 0;
#X connect 0 0 8 0;
#X connect 0 0 11 0;
#X connect 0 0 14 0;
#X connect 0 0 17 0;
#X connect 0 0 20 0;
#X connect 0 0 23 0;
#X connect 0 0 26 0;
#X connect 0 0 29 0;
#X connect 0 0 32 0;
#X connect 0 0 35 0;
#X connect 0 0 38 0;
#X connect 0 0 41 0;
#X connect 0 0 44 0;
#X connect 0 0 47 0;
#X connect 0 0 50 0;
#X connect 0 0 53 0;
#X connect 0 0 56 0;
#X connect 0 0 59 0;
#X connect 0 0 62 0;
#X connect 0 0 65 0;
#X connect 0 0 68 0;
#X connect 0 0 71 0;
#X connect 0 0 74 0;
#X connect 0 0 77 0;
#X connect 0 0 80 0;
#X connect 0 0 83 0;
#X connect 0 0 86 0;
#X connect 0 0 89 0;
#X connect 0 0 92 0;
#X connect 0 0 95 0;
#X connect 0 0 98 0;
#X connect 0 0 101 0;
#X connect 0 0 104 0;
#X connect 0 0 107 0;
#X connect 0 0 110 0;
#X connect 0 0 113 0;
#X connect 0 0 116 0;
#X connect 0 0 119 0;
#X connect 0 0 122 0;
#X connect 0 0 125 0;
#X connect 0 0 128 0;
#X connect 0 0 131 0;
#X connect 0 0 134 0;
#X connect 0 0 137 0;
#X connect 0 0 140 0;
#X connect 0 0 143 0;
#X connect 0 0 146 0;
#X connect 0 0 149 0;
#X connect 1 0 3 0;
#X connect 1 0 6 0;
#X connect 1 0 9 0;
#X connect 1 0 12 0;
#X connect 1 0 15 0;
#X connect 1 0 18 0;
#X connect 1 0 21 0;
#X connect 1 0 24 0;
#X connect 1 0 27 0;
#X connect 1 0 30 0;
#X connect 1 0 33 0;
#X connect 1 0 36 0;
#X connect 1 0 39 0;
#X connect 1 0 42 0;
#X connect 1 0 45 0;
#X connect 1 0 48 0;
#X connect 1 0 51 0;
#X connect 1 0 54 0;
#X connect 1 0 57 0;
#X connect 1 0 60 0;
#X connect 1 0 63 0;
#X connect 1 0 66 0;
#X connect 1 0 69 0;
#X connect 1 0 72 0;
#X connect 1 0 75 0;
#X connect 1 0 78 0;
#X connect 1 0 81 0;
#X connect 1 0 84 0;
#X connect 1 0 87 0;
#X connect 1 0 90 0;
#X connect 1 0 93 0;
#X connect 1 0 96 0;
#X connect 1 0 99 0;
#X connect 1 0 102 0;
#X connect 1 0 105 0;
#X connect 1 0 108 0;
#X connect 1 0 111 0;
#X connect 1 0 114 0;
#X connect 1 0 117 0;
#X connect 1 0 120 0;
#X connect 1 0 123 0;
#X connect 1 0 126 0;
#X connect 1 0 129 0;
#X connect 1 0 132 0;
#X connect 1 0 135 0;
#X connect 1 0 138 0;
#X connect 1 0 141 0;
#X connect 1 0 144 0;
#X connect 1 0 147 0;
#X connect 1 0 150 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 11 0 12 1;
#X connect 12 0 13 0;
#X connect 14 0 15 1;
#X connect 15 0 16 0;
#X connect 17 0 18 1;
#X connect 18 0 19 0;
#X connect 20 0 21 1;
#X connect 21 0 22 0;
#X connect 23 0 24 1;
#X connect 24 0 25 0;
#X connect 26 0 27 1;
#X connect 27 0 28 0;
#X connect 29 0 30 1;
#X connect 30 0 31 0;
#X connect 32 0 33 1;
#X connect 33 0 34 0;
#X connect 35 0 36 1;
#X connect 36 0 37 0;
#X connect 38 0 39 1;
#X connect 39 0 40 0;
#X connect 41 0 42 1;
#X connect 42 0 43 0;
#X connect 44 0 45 1;
#X connect 45 0 46 0;
#X connect 47 0 48 1;
#X connect 48 0 49 0;
#X connect 50 0 51 1;
#X connect 51 0 52 0;
#X connect 53 0 54 1;
#X connect 54 0 55 0;
#X connect 56 0 57 1;
#X connect 57 0 58 0;
#X connect 59 0 60 1;
#X connect 60 0 61 0;
#X connect 62 0 63 1;
#X connect 63 0 64 0;
#X connect 65 0 66 1;
#X connect 66 0 67 0;
#X connect 68 0 69 1;
#X connect 69 0 70 0;
#X connect 71 0 72 1;
#X connect 72 0 73 0;
#X connect 74 0 75 1;
#X connect 75 0 76 0;
#X connect 77 0 78 1;
#X connect 78 0 79 0;
#X connect 80 0 81 1;
#X connect 81 0 82 0;
#X connect 83 0 84 1;
#X connect 84 0 85 0;
#X connect 86 0 87 1;
#X connect 87 0 88 0;
#X connect 89 0 90 1;
#X connect 90 0 91 0;
#X connect 92 0 93 1;
#X connect 93 0 94 0;
#X connect 95 0 96 1;
#X connect 96 0 97 0;
#X connect 98 0 99 1;
#X connect 99 0 100 0;
#X connect 101 0 102 1;
#X connect 102 0 103 0;
#X connect 104 0 105 1;
#X connect 105 0 106 0;
#X connect 107 0 108 1;
#X connect 108 0 109 0;
#X connect 110 0 111 1;
#X connect 111 0 112 0;
#X connect 113 0 114 1;
#X connect 114 0 115 0;
#X connect 116 0 117 1;
#X connect 117 0 118 0;
#X connect 119 0 120 1;
#X connect 120 0 121 0;
#X connect 122 0 123 1;
#X connect 123 0 124 0;
#X connect 125 0 126 1;
#X connect 126 0 127 0;
#X connect 128 0 129 1;
#X connect 129 0 130 0;
#X connect 131 0 132 1;
#X connect 132 0 133 0;
#X connect 134 0 135 1;
#X connect 135 0 136 0;
#X connect 137 0 138 1;
#X connect 138 0 139 0;
#X connect 140 0 141 1;
#X connect 141 0 142 0;
#X connect 143 0 144 1;
#X connect 144 0 145 0;
#X connect 146 0 147 1;
#X connect 147 0 148 0;
#X connect 149 0 150 1;
#X connect 150 0 151 0;
#X restore 210 540 pd gatemaker_50_copy;
#X obj 116 565 gatemaker~ 10;
#N canvas 718 657 1060 284 gatemaker~_10_copy 0;
#X obj 46 48 inlet;
#X obj 117 48 inlet~;
#X obj 37 160 == 1;
#X obj 10 185 transistor~;
#X obj 10 210 outlet~;
#X obj 137 160 == 2;
#X obj 110 185 transistor~;
#X obj 110 210 outlet~;
#X obj 237 160 == 3;
#X obj 210 185 transistor~;
#X obj 210 210 outlet~;
#X obj 337 160 == 4;
#X obj 310 185 transistor~;
#X obj 310 210 outlet~;
#X obj 437 160 == 5;
#X obj 410 185 transistor~;
#X obj 410 210 outlet~;
#X obj 537 160 == 6;
#X obj 510 185 transistor~;
#X obj 510 210 outlet~;
#X obj 637 160 == 7;
#X obj 610 185 transistor~;
#X obj 610 210 outlet~;
#X obj 737 160 == 8;
#X obj 710 185 transistor~;
#X obj 710 210 outlet~;
#X obj 837 160 == 9;
#X obj 810 185 transistor~;
#X obj 810 210 outlet~;
#X obj 937 160 >= 10;
#X obj 910 185 transistor~;
#X obj 910 210 outlet~;
#X connect 0 0 2 0;
#X connect 0 0 5 0;
#X connect 0 0 8 0;
#X connect 0 0 11 0;
#X connect 0 0 14 0;
#X connect 0 0 17 0;
#X connect 0 0 20 0;
#X connect 0 0 23 0;
#X connect 0 0 26 0;
#X connect 0 0 29 0;
#X connect 1 0 3 0;
#X connect 1 0 6 0;
#X connect 1 0 9 0;
#X connect 1 0 12 0;
#X connect 1 0 15 0;
#X connect 1 0 18 0;
#X connect 1 0 21 0;
#X connect 1 0 24 0;
#X connect 1 0 27 0;
#X connect 1 0 30 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 5 0 6 1;
#X connect 6 0 7 0;
#X connect 8 0 9 1;
#X connect 9 0 10 0;
#X connect 11 0 12 1;
#X connect 12 0 13 0;
#X connect 14 0 15 1;
#X connect 15 0 16 0;
#X connect 17 0 18 1;
#X connect 18 0 19 0;
#X connect 20 0 21 1;
#X connect 21 0 22 0;
#X connect 23 0 24 1;
#X connect 24 0 25 0;
#X connect 26 0 27 1;
#X connect 27 0 28 0;
#X connect 29 0 30 1;
#X connect 30 0 31 0;
#X restore 210 564 pd gatemaker~_10_copy _____________________;
#X obj 116 593 switchmaker 100;
#N canvas 373 631 1547 412 switchmaker_100_copy 0;
#X obj -93 98 inlet;
#X obj -11 331 outlet;
#X obj 37 160 == 1;
#X obj 10 185 spigot;
#X obj 10 110 inlet;
#X obj 137 160 == 2;
#X obj 110 185 spigot;
#X obj 110 110 inlet;
#X obj 237 160 == 3;
#X obj 210 185 spigot;
#X obj 210 110 inlet;
#X obj 337 160 == 4;
#X obj 310 185 spigot;
#X obj 310 110 inlet;
#X obj 437 160 == 5;
#X obj 410 185 spigot;
#X obj 410 110 inlet;
#X obj 537 160 == 6;
#X obj 510 185 spigot;
#X obj 510 110 inlet;
#X obj 637 160 == 7;
#X obj 610 185 spigot;
#X obj 610 110 inlet;
#X obj 737 160 == 8;
#X obj 710 185 spigot;
#X obj 710 110 inlet;
#X obj 837 160 == 9;
#X obj 810 185 spigot;
#X obj 810 110 inlet;
#X obj 937 160 == 10;
#X obj 910 185 spigot;
#X obj 910 110 inlet;
#X obj 1037 160 == 11;
#X obj 1010 185 spigot;
#X obj 1010 110 inlet;
#X obj 1137 160 == 12;
#X obj 1110 185 spigot;
#X obj 1110 110 inlet;
#X obj 1237 160 == 13;
#X obj 1210 185 spigot;
#X obj 1210 110 inlet;
#X obj 1337 160 == 14;
#X obj 1310 185 spigot;
#X obj 1310 110 inlet;
#X obj 1437 160 == 15;
#X obj 1410 185 spigot;
#X obj 1410 110 inlet;
#X obj 1537 160 == 16;
#X obj 1510 185 spigot;
#X obj 1510 110 inlet;
#X obj 1637 160 == 17;
#X obj 1610 185 spigot;
#X obj 1610 110 inlet;
#X obj 1737 160 == 18;
#X obj 1710 185 spigot;
#X obj 1710 110 inlet;
#X obj 1837 160 == 19;
#X obj 1810 185 spigot;
#X obj 1810 110 inlet;
#X obj 1937 160 == 20;
#X obj 1910 185 spigot;
#X obj 1910 110 inlet;
#X obj 2037 160 == 21;
#X obj 2010 185 spigot;
#X obj 2010 110 inlet;
#X obj 2137 160 == 22;
#X obj 2110 185 spigot;
#X obj 2110 110 inlet;
#X obj 2237 160 == 23;
#X obj 2210 185 spigot;
#X obj 2210 110 inlet;
#X obj 2337 160 == 24;
#X obj 2310 185 spigot;
#X obj 2310 110 inlet;
#X obj 2437 160 == 25;
#X obj 2410 185 spigot;
#X obj 2410 110 inlet;
#X obj 2537 160 == 26;
#X obj 2510 185 spigot;
#X obj 2510 110 inlet;
#X obj 2637 160 == 27;
#X obj 2610 185 spigot;
#X obj 2610 110 inlet;
#X obj 2737 160 == 28;
#X obj 2710 185 spigot;
#X obj 2710 110 inlet;
#X obj 2837 160 == 29;
#X obj 2810 185 spigot;
#X obj 2810 110 inlet;
#X obj 2937 160 == 30;
#X obj 2910 185 spigot;
#X obj 2910 110 inlet;
#X obj 3037 160 == 31;
#X obj 3010 185 spigot;
#X obj 3010 110 inlet;
#X obj 3137 160 == 32;
#X obj 3110 185 spigot;
#X obj 3110 110 inlet;
#X obj 3237 160 == 33;
#X obj 3210 185 spigot;
#X obj 3210 110 inlet;
#X obj 3337 160 == 34;
#X obj 3310 185 spigot;
#X obj 3310 110 inlet;
#X obj 3437 160 == 35;
#X obj 3410 185 spigot;
#X obj 3410 110 inlet;
#X obj 3537 160 == 36;
#X obj 3510 185 spigot;
#X obj 3510 110 inlet;
#X obj 3637 160 == 37;
#X obj 3610 185 spigot;
#X obj 3610 110 inlet;
#X obj 3737 160 == 38;
#X obj 3710 185 spigot;
#X obj 3710 110 inlet;
#X obj 3837 160 == 39;
#X obj 3810 185 spigot;
#X obj 3810 110 inlet;
#X obj 3937 160 == 40;
#X obj 3910 185 spigot;
#X obj 3910 110 inlet;
#X obj 4037 160 == 41;
#X obj 4010 185 spigot;
#X obj 4010 110 inlet;
#X obj 4137 160 == 42;
#X obj 4110 185 spigot;
#X obj 4110 110 inlet;
#X obj 4237 160 == 43;
#X obj 4210 185 spigot;
#X obj 4210 110 inlet;
#X obj 4337 160 == 44;
#X obj 4310 185 spigot;
#X obj 4310 110 inlet;
#X obj 4437 160 == 45;
#X obj 4410 185 spigot;
#X obj 4410 110 inlet;
#X obj 4537 160 == 46;
#X obj 4510 185 spigot;
#X obj 4510 110 inlet;
#X obj 4637 160 == 47;
#X obj 4610 185 spigot;
#X obj 4610 110 inlet;
#X obj 4737 160 == 48;
#X obj 4710 185 spigot;
#X obj 4710 110 inlet;
#X obj 4837 160 == 49;
#X obj 4810 185 spigot;
#X obj 4810 110 inlet;
#X obj 4937 160 == 50;
#X obj 4910 185 spigot;
#X obj 4910 110 inlet;
#X obj 5037 160 == 51;
#X obj 5010 185 spigot;
#X obj 5010 110 inlet;
#X obj 5137 160 == 52;
#X obj 5110 185 spigot;
#X obj 5110 110 inlet;
#X obj 5237 160 == 53;
#X obj 5210 185 spigot;
#X obj 5210 110 inlet;
#X obj 5337 160 == 54;
#X obj 5310 185 spigot;
#X obj 5310 110 inlet;
#X obj 5437 160 == 55;
#X obj 5410 185 spigot;
#X obj 5410 110 inlet;
#X obj 5537 160 == 56;
#X obj 5510 185 spigot;
#X obj 5510 110 inlet;
#X obj 5637 160 == 57;
#X obj 5610 185 spigot;
#X obj 5610 110 inlet;
#X obj 5737 160 == 58;
#X obj 5710 185 spigot;
#X obj 5710 110 inlet;
#X obj 5837 160 == 59;
#X obj 5810 185 spigot;
#X obj 5810 110 inlet;
#X obj 5937 160 == 60;
#X obj 5910 185 spigot;
#X obj 5910 110 inlet;
#X obj 6037 160 == 61;
#X obj 6010 185 spigot;
#X obj 6010 110 inlet;
#X obj 6137 160 == 62;
#X obj 6110 185 spigot;
#X obj 6110 110 inlet;
#X obj 6237 160 == 63;
#X obj 6210 185 spigot;
#X obj 6210 110 inlet;
#X obj 6337 160 == 64;
#X obj 6310 185 spigot;
#X obj 6310 110 inlet;
#X obj 6437 160 == 65;
#X obj 6410 185 spigot;
#X obj 6410 110 inlet;
#X obj 6537 160 == 66;
#X obj 6510 185 spigot;
#X obj 6510 110 inlet;
#X obj 6637 160 == 67;
#X obj 6610 185 spigot;
#X obj 6610 110 inlet;
#X obj 6737 160 == 68;
#X obj 6710 185 spigot;
#X obj 6710 110 inlet;
#X obj 6837 160 == 69;
#X obj 6810 185 spigot;
#X obj 6810 110 inlet;
#X obj 6937 160 == 70;
#X obj 6910 185 spigot;
#X obj 6910 110 inlet;
#X obj 7037 160 == 71;
#X obj 7010 185 spigot;
#X obj 7010 110 inlet;
#X obj 7137 160 == 72;
#X obj 7110 185 spigot;
#X obj 7110 110 inlet;
#X obj 7237 160 == 73;
#X obj 7210 185 spigot;
#X obj 7210 110 inlet;
#X obj 7337 160 == 74;
#X obj 7310 185 spigot;
#X obj 7310 110 inlet;
#X obj 7437 160 == 75;
#X obj 7410 185 spigot;
#X obj 7410 110 inlet;
#X obj 7537 160 == 76;
#X obj 7510 185 spigot;
#X obj 7510 110 inlet;
#X obj 7637 160 == 77;
#X obj 7610 185 spigot;
#X obj 7610 110 inlet;
#X obj 7737 160 == 78;
#X obj 7710 185 spigot;
#X obj 7710 110 inlet;
#X obj 7837 160 == 79;
#X obj 7810 185 spigot;
#X obj 7810 110 inlet;
#X obj 7937 160 == 80;
#X obj 7910 185 spigot;
#X obj 7910 110 inlet;
#X obj 8037 160 == 81;
#X obj 8010 185 spigot;
#X obj 8010 110 inlet;
#X obj 8137 160 == 82;
#X obj 8110 185 spigot;
#X obj 8110 110 inlet;
#X obj 8237 160 == 83;
#X obj 8210 185 spigot;
#X obj 8210 110 inlet;
#X obj 8337 160 == 84;
#X obj 8310 185 spigot;
#X obj 8310 110 inlet;
#X obj 8437 160 == 85;
#X obj 8410 185 spigot;
#X obj 8410 110 inlet;
#X obj 8537 160 == 86;
#X obj 8510 185 spigot;
#X obj 8510 110 inlet;
#X obj 8637 160 == 87;
#X obj 8610 185 spigot;
#X obj 8610 110 inlet;
#X obj 8737 160 == 88;
#X obj 8710 185 spigot;
#X obj 8710 110 inlet;
#X obj 8837 160 == 89;
#X obj 8810 185 spigot;
#X obj 8810 110 inlet;
#X obj 8937 160 == 90;
#X obj 8910 185 spigot;
#X obj 8910 110 inlet;
#X obj 9037 160 == 91;
#X obj 9010 185 spigot;
#X obj 9010 110 inlet;
#X obj 9137 160 == 92;
#X obj 9110 185 spigot;
#X obj 9110 110 inlet;
#X obj 9237 160 == 93;
#X obj 9210 185 spigot;
#X obj 9210 110 inlet;
#X obj 9337 160 == 94;
#X obj 9310 185 spigot;
#X obj 9310 110 inlet;
#X obj 9437 160 == 95;
#X obj 9410 185 spigot;
#X obj 9410 110 inlet;
#X obj 9537 160 == 96;
#X obj 9510 185 spigot;
#X obj 9510 110 inlet;
#X obj 9637 160 == 97;
#X obj 9610 185 spigot;
#X obj 9610 110 inlet;
#X obj 9737 160 == 98;
#X obj 9710 185 spigot;
#X obj 9710 110 inlet;
#X obj 9837 160 == 99;
#X obj 9810 185 spigot;
#X obj 9810 110 inlet;
#X obj 9937 160 >= 100;
#X obj 9910 185 spigot;
#X obj 9910 110 inlet;
#X connect 0 0 2 0;
#X connect 0 0 5 0;
#X connect 0 0 8 0;
#X connect 0 0 11 0;
#X connect 0 0 14 0;
#X connect 0 0 17 0;
#X connect 0 0 20 0;
#X connect 0 0 23 0;
#X connect 0 0 26 0;
#X connect 0 0 29 0;
#X connect 0 0 32 0;
#X connect 0 0 35 0;
#X connect 0 0 38 0;
#X connect 0 0 41 0;
#X connect 0 0 44 0;
#X connect 0 0 47 0;
#X connect 0 0 50 0;
#X connect 0 0 53 0;
#X connect 0 0 56 0;
#X connect 0 0 59 0;
#X connect 0 0 62 0;
#X connect 0 0 65 0;
#X connect 0 0 68 0;
#X connect 0 0 71 0;
#X connect 0 0 74 0;
#X connect 0 0 77 0;
#X connect 0 0 80 0;
#X connect 0 0 83 0;
#X connect 0 0 86 0;
#X connect 0 0 89 0;
#X connect 0 0 92 0;
#X connect 0 0 95 0;
#X connect 0 0 98 0;
#X connect 0 0 101 0;
#X connect 0 0 104 0;
#X connect 0 0 107 0;
#X connect 0 0 110 0;
#X connect 0 0 113 0;
#X connect 0 0 116 0;
#X connect 0 0 119 0;
#X connect 0 0 122 0;
#X connect 0 0 125 0;
#X connect 0 0 128 0;
#X connect 0 0 131 0;
#X connect 0 0 134 0;
#X connect 0 0 137 0;
#X connect 0 0 140 0;
#X connect 0 0 143 0;
#X connect 0 0 146 0;
#X connect 0 0 149 0;
#X connect 0 0 152 0;
#X connect 0 0 155 0;
#X connect 0 0 158 0;
#X connect 0 0 161 0;
#X connect 0 0 164 0;
#X connect 0 0 167 0;
#X connect 0 0 170 0;
#X connect 0 0 173 0;
#X connect 0 0 176 0;
#X connect 0 0 179 0;
#X connect 0 0 182 0;
#X connect 0 0 185 0;
#X connect 0 0 188 0;
#X connect 0 0 191 0;
#X connect 0 0 194 0;
#X connect 0 0 197 0;
#X connect 0 0 200 0;
#X connect 0 0 203 0;
#X connect 0 0 206 0;
#X connect 0 0 209 0;
#X connect 0 0 212 0;
#X connect 0 0 215 0;
#X connect 0 0 218 0;
#X connect 0 0 221 0;
#X connect 0 0 224 0;
#X connect 0 0 227 0;
#X connect 0 0 230 0;
#X connect 0 0 233 0;
#X connect 0 0 236 0;
#X connect 0 0 239 0;
#X connect 0 0 242 0;
#X connect 0 0 245 0;
#X connect 0 0 248 0;
#X connect 0 0 251 0;
#X connect 0 0 254 0;
#X connect 0 0 257 0;
#X connect 0 0 260 0;
#X connect 0 0 263 0;
#X connect 0 0 266 0;
#X connect 0 0 269 0;
#X connect 0 0 272 0;
#X connect 0 0 275 0;
#X connect 0 0 278 0;
#X connect 0 0 281 0;
#X connect 0 0 284 0;
#X connect 0 0 287 0;
#X connect 0 0 290 0;
#X connect 0 0 293 0;
#X connect 0 0 296 0;
#X connect 0 0 299 0;
#X connect 2 0 3 1;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 6 1;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 8 0 9 1;
#X connect 9 0 1 0;
#X connect 10 0 9 0;
#X connect 11 0 12 1;
#X connect 12 0 1 0;
#X connect 13 0 12 0;
#X connect 14 0 15 1;
#X connect 15 0 1 0;
#X connect 16 0 15 0;
#X connect 17 0 18 1;
#X connect 18 0 1 0;
#X connect 19 0 18 0;
#X connect 20 0 21 1;
#X connect 21 0 1 0;
#X connect 22 0 21 0;
#X connect 23 0 24 1;
#X connect 24 0 1 0;
#X connect 25 0 24 0;
#X connect 26 0 27 1;
#X connect 27 0 1 0;
#X connect 28 0 27 0;
#X connect 29 0 30 1;
#X connect 30 0 1 0;
#X connect 31 0 30 0;
#X connect 32 0 33 1;
#X connect 33 0 1 0;
#X connect 34 0 33 0;
#X connect 35 0 36 1;
#X connect 36 0 1 0;
#X connect 37 0 36 0;
#X connect 38 0 39 1;
#X connect 39 0 1 0;
#X connect 40 0 39 0;
#X connect 41 0 42 1;
#X connect 42 0 1 0;
#X connect 43 0 42 0;
#X connect 44 0 45 1;
#X connect 45 0 1 0;
#X connect 46 0 45 0;
#X connect 47 0 48 1;
#X connect 48 0 1 0;
#X connect 49 0 48 0;
#X connect 50 0 51 1;
#X connect 51 0 1 0;
#X connect 52 0 51 0;
#X connect 53 0 54 1;
#X connect 54 0 1 0;
#X connect 55 0 54 0;
#X connect 56 0 57 1;
#X connect 57 0 1 0;
#X connect 58 0 57 0;
#X connect 59 0 60 1;
#X connect 60 0 1 0;
#X connect 61 0 60 0;
#X connect 62 0 63 1;
#X connect 63 0 1 0;
#X connect 64 0 63 0;
#X connect 65 0 66 1;
#X connect 66 0 1 0;
#X connect 67 0 66 0;
#X connect 68 0 69 1;
#X connect 69 0 1 0;
#X connect 70 0 69 0;
#X connect 71 0 72 1;
#X connect 72 0 1 0;
#X connect 73 0 72 0;
#X connect 74 0 75 1;
#X connect 75 0 1 0;
#X connect 76 0 75 0;
#X connect 77 0 78 1;
#X connect 78 0 1 0;
#X connect 79 0 78 0;
#X connect 80 0 81 1;
#X connect 81 0 1 0;
#X connect 82 0 81 0;
#X connect 83 0 84 1;
#X connect 84 0 1 0;
#X connect 85 0 84 0;
#X connect 86 0 87 1;
#X connect 87 0 1 0;
#X connect 88 0 87 0;
#X connect 89 0 90 1;
#X connect 90 0 1 0;
#X connect 91 0 90 0;
#X connect 92 0 93 1;
#X connect 93 0 1 0;
#X connect 94 0 93 0;
#X connect 95 0 96 1;
#X connect 96 0 1 0;
#X connect 97 0 96 0;
#X connect 98 0 99 1;
#X connect 99 0 1 0;
#X connect 100 0 99 0;
#X connect 101 0 102 1;
#X connect 102 0 1 0;
#X connect 103 0 102 0;
#X connect 104 0 105 1;
#X connect 105 0 1 0;
#X connect 106 0 105 0;
#X connect 107 0 108 1;
#X connect 108 0 1 0;
#X connect 109 0 108 0;
#X connect 110 0 111 1;
#X connect 111 0 1 0;
#X connect 112 0 111 0;
#X connect 113 0 114 1;
#X connect 114 0 1 0;
#X connect 115 0 114 0;
#X connect 116 0 117 1;
#X connect 117 0 1 0;
#X connect 118 0 117 0;
#X connect 119 0 120 1;
#X connect 120 0 1 0;
#X connect 121 0 120 0;
#X connect 122 0 123 1;
#X connect 123 0 1 0;
#X connect 124 0 123 0;
#X connect 125 0 126 1;
#X connect 126 0 1 0;
#X connect 127 0 126 0;
#X connect 128 0 129 1;
#X connect 129 0 1 0;
#X connect 130 0 129 0;
#X connect 131 0 132 1;
#X connect 132 0 1 0;
#X connect 133 0 132 0;
#X connect 134 0 135 1;
#X connect 135 0 1 0;
#X connect 136 0 135 0;
#X connect 137 0 138 1;
#X connect 138 0 1 0;
#X connect 139 0 138 0;
#X connect 140 0 141 1;
#X connect 141 0 1 0;
#X connect 142 0 141 0;
#X connect 143 0 144 1;
#X connect 144 0 1 0;
#X connect 145 0 144 0;
#X connect 146 0 147 1;
#X connect 147 0 1 0;
#X connect 148 0 147 0;
#X connect 149 0 150 1;
#X connect 150 0 1 0;
#X connect 151 0 150 0;
#X connect 152 0 153 1;
#X connect 153 0 1 0;
#X connect 154 0 153 0;
#X connect 155 0 156 1;
#X connect 156 0 1 0;
#X connect 157 0 156 0;
#X connect 158 0 159 1;
#X connect 159 0 1 0;
#X connect 160 0 159 0;
#X connect 161 0 162 1;
#X connect 162 0 1 0;
#X connect 163 0 162 0;
#X connect 164 0 165 1;
#X connect 165 0 1 0;
#X connect 166 0 165 0;
#X connect 167 0 168 1;
#X connect 168 0 1 0;
#X connect 169 0 168 0;
#X connect 170 0 171 1;
#X connect 171 0 1 0;
#X connect 172 0 171 0;
#X connect 173 0 174 1;
#X connect 174 0 1 0;
#X connect 175 0 174 0;
#X connect 176 0 177 1;
#X connect 177 0 1 0;
#X connect 178 0 177 0;
#X connect 179 0 180 1;
#X connect 180 0 1 0;
#X connect 181 0 180 0;
#X connect 182 0 183 1;
#X connect 183 0 1 0;
#X connect 184 0 183 0;
#X connect 185 0 186 1;
#X connect 186 0 1 0;
#X connect 187 0 186 0;
#X connect 188 0 189 1;
#X connect 189 0 1 0;
#X connect 190 0 189 0;
#X connect 191 0 192 1;
#X connect 192 0 1 0;
#X connect 193 0 192 0;
#X connect 194 0 195 1;
#X connect 195 0 1 0;
#X connect 196 0 195 0;
#X connect 197 0 198 1;
#X connect 198 0 1 0;
#X connect 199 0 198 0;
#X connect 200 0 201 1;
#X connect 201 0 1 0;
#X connect 202 0 201 0;
#X connect 203 0 204 1;
#X connect 204 0 1 0;
#X connect 205 0 204 0;
#X connect 206 0 207 1;
#X connect 207 0 1 0;
#X connect 208 0 207 0;
#X connect 209 0 210 1;
#X connect 210 0 1 0;
#X connect 211 0 210 0;
#X connect 212 0 213 1;
#X connect 213 0 1 0;
#X connect 214 0 213 0;
#X connect 215 0 216 1;
#X connect 216 0 1 0;
#X connect 217 0 216 0;
#X connect 218 0 219 1;
#X connect 219 0 1 0;
#X connect 220 0 219 0;
#X connect 221 0 222 1;
#X connect 222 0 1 0;
#X connect 223 0 222 0;
#X connect 224 0 225 1;
#X connect 225 0 1 0;
#X connect 226 0 225 0;
#X connect 227 0 228 1;
#X connect 228 0 1 0;
#X connect 229 0 228 0;
#X connect 230 0 231 1;
#X connect 231 0 1 0;
#X connect 232 0 231 0;
#X connect 233 0 234 1;
#X connect 234 0 1 0;
#X connect 235 0 234 0;
#X connect 236 0 237 1;
#X connect 237 0 1 0;
#X connect 238 0 237 0;
#X connect 239 0 240 1;
#X connect 240 0 1 0;
#X connect 241 0 240 0;
#X connect 242 0 243 1;
#X connect 243 0 1 0;
#X connect 244 0 243 0;
#X connect 245 0 246 1;
#X connect 246 0 1 0;
#X connect 247 0 246 0;
#X connect 248 0 249 1;
#X connect 249 0 1 0;
#X connect 250 0 249 0;
#X connect 251 0 252 1;
#X connect 252 0 1 0;
#X connect 253 0 252 0;
#X connect 254 0 255 1;
#X connect 255 0 1 0;
#X connect 256 0 255 0;
#X connect 257 0 258 1;
#X connect 258 0 1 0;
#X connect 259 0 258 0;
#X connect 260 0 261 1;
#X connect 261 0 1 0;
#X connect 262 0 261 0;
#X connect 263 0 264 1;
#X connect 264 0 1 0;
#X connect 265 0 264 0;
#X connect 266 0 267 1;
#X connect 267 0 1 0;
#X connect 268 0 267 0;
#X connect 269 0 270 1;
#X connect 270 0 1 0;
#X connect 271 0 270 0;
#X connect 272 0 273 1;
#X connect 273 0 1 0;
#X connect 274 0 273 0;
#X connect 275 0 276 1;
#X connect 276 0 1 0;
#X connect 277 0 276 0;
#X connect 278 0 279 1;
#X connect 279 0 1 0;
#X connect 280 0 279 0;
#X connect 281 0 282 1;
#X connect 282 0 1 0;
#X connect 283 0 282 0;
#X connect 284 0 285 1;
#X connect 285 0 1 0;
#X connect 286 0 285 0;
#X connect 287 0 288 1;
#X connect 288 0 1 0;
#X connect 289 0 288 0;
#X connect 290 0 291 1;
#X connect 291 0 1 0;
#X connect 292 0 291 0;
#X connect 293 0 294 1;
#X connect 294 0 1 0;
#X connect 295 0 294 0;
#X connect 296 0 297 1;
#X connect 297 0 1 0;
#X connect 298 0 297 0;
#X connect 299 0 300 1;
#X connect 300 0 1 0;
#X connect 301 0 300 0;
#X restore 219 592 pd switchmaker_100_copy;
#X obj 117 625 switchmaker~ 9;
#N canvas 384 410 981 412 switchmaker~_9_copy 0;
#X obj -93 98 inlet;
#X obj -11 331 outlet~;
#X obj 37 160 == 1;
#X obj 10 185 transistor~;
#X obj 10 110 inlet~;
#X obj 137 160 == 2;
#X obj 110 185 transistor~;
#X obj 110 110 inlet~;
#X obj 237 160 == 3;
#X obj 210 185 transistor~;
#X obj 210 110 inlet~;
#X obj 337 160 == 4;
#X obj 310 185 transistor~;
#X obj 310 110 inlet~;
#X obj 437 160 == 5;
#X obj 410 185 transistor~;
#X obj 410 110 inlet~;
#X obj 537 160 == 6;
#X obj 510 185 transistor~;
#X obj 510 110 inlet~;
#X obj 637 160 == 7;
#X obj 610 185 transistor~;
#X obj 610 110 inlet~;
#X obj 737 160 == 8;
#X obj 710 185 transistor~;
#X obj 710 110 inlet~;
#X obj 837 160 >= 9;
#X obj 810 185 transistor~;
#X obj 810 110 inlet~;
#X connect 0 0 2 0;
#X connect 0 0 5 0;
#X connect 0 0 8 0;
#X connect 0 0 11 0;
#X connect 0 0 14 0;
#X connect 0 0 17 0;
#X connect 0 0 20 0;
#X connect 0 0 23 0;
#X connect 0 0 26 0;
#X connect 2 0 3 1;
#X connect 3 0 1 0;
#X connect 4 0 3 0;
#X connect 5 0 6 1;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 8 0 9 1;
#X connect 9 0 1 0;
#X connect 10 0 9 0;
#X connect 11 0 12 1;
#X connect 12 0 1 0;
#X connect 13 0 12 0;
#X connect 14 0 15 1;
#X connect 15 0 1 0;
#X connect 16 0 15 0;
#X connect 17 0 18 1;
#X connect 18 0 1 0;
#X connect 19 0 18 0;
#X connect 20 0 21 1;
#X connect 21 0 1 0;
#X connect 22 0 21 0;
#X connect 23 0 24 1;
#X connect 24 0 1 0;
#X connect 25 0 24 0;
#X connect 26 0 27 1;
#X connect 27 0 1 0;
#X connect 28 0 27 0;
#X restore 214 624 pd switchmaker~_9_copy;
#X text 616 102 There's a point where a gate or a switch can be too
long to use (when it's impossible to distinguish between adjacent gates/switches).
If this happens \, you can easily combine multiple gates/switches to
make longer ones:;
#X floatatom 626 179 5 0 39 0 Select_Gate: - -;
#X obj 626 206 t f f;
#X floatatom 840 177 5 0 0 0 Input_Value: - -;
#X floatatom 445 348 5 0 0 0 - - -;
#X floatatom 477 348 5 0 0 0 - - -;
#X obj 519 243 gate20 _______________________________________________
;
#X obj 914 284 gate20 _______________________________________________
;
#X obj 859 228 - 19;
#X floatatom 509 348 5 0 0 0 - - -;
#X floatatom 541 348 5 0 0 0 - - -;
#X floatatom 573 348 5 0 0 0 - - -;
#X floatatom 605 348 5 0 0 0 - - -;
#X floatatom 637 348 5 0 0 0 - - -;
#X floatatom 669 348 5 0 0 0 - - -;
#X floatatom 701 348 5 0 0 0 - - -;
#X floatatom 733 348 5 0 0 0 - - -;
#X floatatom 765 348 5 0 0 0 - - -;
#X floatatom 797 348 5 0 0 0 - - -;
#X floatatom 829 348 5 0 0 0 - - -;
#X floatatom 861 348 5 0 0 0 - - -;
#X floatatom 893 348 5 0 0 0 - - -;
#X floatatom 925 348 5 0 0 0 - - -;
#X floatatom 957 348 5 0 0 0 - - -;
#X floatatom 989 348 5 0 0 0 - - -;
#X floatatom 1024 348 5 0 0 0 - - -;
#X floatatom 1056 348 5 0 0 0 - - -;
#X floatatom 1088 348 5 0 0 0 - - -;
#X floatatom 1120 348 5 0 0 0 - - -;
#X floatatom 1152 348 5 0 0 0 - - -;
#X floatatom 1184 348 5 0 0 0 - - -;
#X floatatom 1216 348 5 0 0 0 - - -;
#X floatatom 1248 348 5 0 0 0 - - -;
#X floatatom 1280 348 5 0 0 0 - - -;
#X floatatom 1312 348 5 0 0 0 - - -;
#X floatatom 1344 348 5 0 0 0 - - -;
#X floatatom 1376 348 5 0 0 0 - - -;
#X floatatom 1408 348 5 0 0 0 - - -;
#X floatatom 1440 348 5 0 0 0 - - -;
#X floatatom 1472 348 5 0 0 0 - - -;
#X floatatom 1504 348 5 0 0 0 - - -;
#X floatatom 1536 348 5 0 0 0 - - -;
#X floatatom 1568 348 5 0 0 0 - - -;
#X floatatom 1600 348 5 0 0 0 - - -;
#X floatatom 1632 348 5 0 0 0 - - -;
#X text 589 398 If you really need this many gates \, there's probably
a way you can change your logic to have a more elegant solution.;
#X text 5 575 Make the gate ->;
#X text 392 595 <- copy the insides to a new [pd] subpatch to use it.
;
#X connect 18 0 19 0;
#X connect 19 0 23 0;
#X connect 19 1 25 0;
#X connect 20 0 23 1;
#X connect 23 0 21 0;
#X connect 23 1 22 0;
#X connect 23 2 26 0;
#X connect 23 3 27 0;
#X connect 23 4 28 0;
#X connect 23 5 29 0;
#X connect 23 6 30 0;
#X connect 23 7 31 0;
#X connect 23 8 32 0;
#X connect 23 9 33 0;
#X connect 23 10 34 0;
#X connect 23 11 35 0;
#X connect 23 12 36 0;
#X connect 23 13 37 0;
#X connect 23 14 38 0;
#X connect 23 15 39 0;
#X connect 23 17 40 0;
#X connect 23 18 41 0;
#X connect 23 19 24 1;
#X connect 24 0 42 0;
#X connect 24 1 43 0;
#X connect 24 2 44 0;
#X connect 24 3 45 0;
#X connect 24 4 46 0;
#X connect 24 5 47 0;
#X connect 24 6 48 0;
#X connect 24 7 49 0;
#X connect 24 8 50 0;
#X connect 24 9 51 0;
#X connect 24 10 52 0;
#X connect 24 11 53 0;
#X connect 24 12 54 0;
#X connect 24 13 55 0;
#X connect 24 14 56 0;
#X connect 24 15 57 0;
#X connect 24 16 58 0;
#X connect 24 17 59 0;
#X connect 24 18 60 0;
#X connect 24 19 61 0;
#X connect 25 0 24 0;
#X restore -96 315 pd \$0-gatemakerdemo;
#X obj -451 519 f \$0;
#X obj -102 11 loadbang;
#X msg -100 38 \; pd dsp 1 \;;
#X msg -1832 525 text 204 78 Welcome to pdx! This is a general-purpose
collection of Pd patches that make many things easier when using Pd.
\, text 243 269 http://www.pd-tutorial.com/english/ch01.html \, text
243 285 https://flossmanuals.net/pure-data/ \, text 6 8 Page 1 \, obj
237 22 cnv 15 15 15 empty empty Getting_Started 20 12 1 32 -262144
-66577 0 \, text 204 131 Everything in the library is Vanilla-compatible
and it can be plugged directly in to a Libpd project without needing
to set up any externals. \, text 204 186 This goal of this guide is
to get you introduced to the many different patches in the pdx library.
Each patch also has a help file for reference. If you're new to Pd
you should check out some of the great tutorials online first. Here
are a few: \, text 205 331 The first step is to add the folder containing
all the pdx patches into Pd's search path for use later. The steps
for this are shown on the next page. \,;
#X msg 348 40 A collection of vanilla-compatible Pd extensions.;
#N canvas 611 137 756 735 \$0-counterdemo 0;
#X obj 268 20 cnv 15 15 15 empty empty Counters 20 12 1 32 -262144
-66577 0;
#X text 147 65 PDX has a vanilla-compatible clone of the [counter]
external from pd-extended:;
#X obj 208 124 counter;
#X obj 274 125 counter-help;
#X text 357 125 <- Help File for reference;
#X text 148 158 If you're currently using pd-extended \, the external
version will still load instead of the pdx version.;
#X text 150 225 [counter2] is another counter that is much simpler
— left inlet counts down \, center inlet resets to 0 \, right inlet
counts up. It also has a GUI representation with buttons for interaction.
;
#X obj 234 302 counter2;
#X floatatom 234 334 5 0 0 0 - - -;
#X obj 315 305 counter2-help;
#X text 155 368 [iterator] is a more detailed version of [counter2]
\, where you can set the minimum \, maximum \, and reset values.;
#X obj 315 628 iterator;
#X obj 200 541 bng 15 250 50 0 empty empty Bang_to_decrease 17 7 0
10 -262144 -1 -1;
#X obj 420 534 bng 15 250 50 0 empty empty Bang_to_increase 17 7 0
10 -262144 -1 -1;
#X obj 294 421 bng 15 250 50 0 empty empty Bang_to_Reset 17 7 0 10
-262144 -1 -1;
#X floatatom 325 515 5 0 0 0 Set_reset_value - -;
#X floatatom 423 461 5 0 0 1 Set_minimum - -;
#X floatatom 429 487 5 0 0 1 Set_Maximum - -;
#X msg 328 462 symbol none;
#X msg 337 486 symbol none;
#X floatatom 315 659 5 0 0 0 - - -;
#X floatatom 210 567 5 0 0 0 Set_to_1_less_than_this_number - -;
#X floatatom 426 561 5 0 0 1 Set_to_1_more_than_this_number - -;
#X text 310 442 Remove min/max:;
#X connect 7 0 8 0;
#X connect 11 0 20 0;
#X connect 12 0 11 0;
#X connect 13 0 11 5;
#X connect 14 0 11 1;
#X connect 15 0 11 2;
#X connect 16 0 11 3;
#X connect 17 0 11 4;
#X connect 18 0 11 3;
#X connect 19 0 11 4;
#X connect 21 0 11 0;
#X connect 22 0 11 5;
#X restore -92 348 pd \$0-counterdemo;
#X obj -318 516 f \$0;
#N canvas 328 74 981 849 \$0-misctooldemo 0;
#X obj 390 21 cnv 15 15 15 empty empty Misc_Tools 20 12 1 32 -262144
-66577 0;
#X obj 197 143 anything;
#X obj 161 249 circularlist;
#X obj 634 377 dpoly;
#X obj 186 544 for++;
#X obj 162 453 name_manager;
#X obj 648 514 number2note;
#X obj 652 688 sbuilder;
#X obj 640 130 scales;
#X text 84 76 Store anything \, like [float] \, [list] \, and [symbol].
Bang the left inlet to output or send a message/float to store it &
output it. Right inlet sets the stored value without oututting it:
;
#X text 90 201 Store a list and shift it left or right. It can also
be used to iterate through a list in both directions:;
#X obj 263 141 anything-help;
#X obj 248 250 circularlist-help;
#X text 93 317 Store key-value pairs - see the help file for more info:
;
#X obj 240 354 dictionary-help;
#X obj 167 355 dictionary;
#X text 92 403 Keep track of a group of words - it maintains an internal
list and will tell you if an input word exists in that list:;
#X obj 252 454 name_manager-help;
#X text 93 501 Iterate through a set of numbers like you would in a
for-loop. This is a clone of the external in pd-extended:;
#X obj 236 543 for++-help;
#X text 98 584 Dynamic receive — like [receive] (or [r ]) \, but
dynamic. You can change the receiver on the fly:;
#X obj 232 665 s foo;
#X obj 279 665 s bar;
#X floatatom 232 632 5 0 0 0 - - -;
#X floatatom 279 632 5 0 0 0 - - -;
#X floatatom 169 682 5 0 0 0 - - -;
#X msg 128 626 foo;
#X msg 173 625 bar;
#X obj 169 652 dr;
#X text 537 74 Use musical scales. You can input a scale with a list
of the intervals \, then iterate or set keys \, modes \, and octaves.
See the help file for more info.;
#X obj 689 130 scales-help;
#X obj 341 647 dr-help;
#X text 545 220 Send note-offs to every note. Useful to get rid of
stuck notes.;
#X obj 692 267 noteflush-help;
#X obj 622 267 noteflush;
#X text 548 332 Divide notes between multiple voices — like [poly]
\, but you can set the # of voices dynamically.;
#X obj 685 377 dpoly-help;
#X text 547 450 Convert a MIDI note number to a symbol with the letter
& octave #:;
#X floatatom 648 491 5 0 0 0 - - -;
#X symbolatom 648 537 10 0 0 0 - - -;
#X text 547 580 Build a symbol programatically:;
#X obj 779 657 bng 15 250 50 0 empty empty Bang_to_clear 17 7 0 10
-262144 -1 -1;
#X obj 544 643 bng 15 250 50 0 empty empty Bang_to_output 17 7 0 10
-262144 -1 -1;
#X symbolatom 652 714 10 0 0 0 - - -;
#X msg 642 613 p;
#X msg 668 613 u;
#X msg 695 614 r;
#X msg 724 614 e;
#X msg 754 614 d;
#X msg 782 614 ata;
#X obj 414 808 keyboard_shortcuts;
#X text 303 779 [keyboard_shortcuts] shows all of Pd's shortcuts for
easy reference:;
#X text 545 162 Play a certain note in a scale:;
#X obj 638 187 scalePlayer;
#X obj 719 187 scalePlayer-help;
#X connect 6 0 39 0;
#X connect 7 0 43 0;
#X connect 23 0 21 0;
#X connect 24 0 22 0;
#X connect 26 0 28 0;
#X connect 27 0 28 0;
#X connect 28 0 25 0;
#X connect 38 0 6 0;
#X connect 41 0 7 2;
#X connect 42 0 7 0;
#X connect 44 0 7 1;
#X connect 45 0 7 1;
#X connect 46 0 7 1;
#X connect 47 0 7 1;
#X connect 48 0 7 1;
#X connect 49 0 7 1;
#X restore -91 372 pd \$0-misctooldemo;
#N canvas 567 108 992 714 \$0-lisp1 0;
#X obj 300 32 cnv 15 15 15 empty empty List_Processing_1 20 12 1 32
-262144 -66577 0;
#X text 292 83 Lists can make a lot of tasks a lot easier. There are
2 main ways of dealing with lists — message boxes \, and the [list]
object.;
#X text 295 165 Pdx has many patches that help use lists in conjuction
with message boxes:;
#X text 122 219 Programatically add items to a message box:;
#X obj 160 294 ladd;
#X msg 134 258 This;
#X msg 175 258 is;
#X msg 207 259 a;
#X msg 160 349;
#X text 197 295 <- add items separated with a semicolon;
#X msg 105 321 set;
#X text 53 319 Clear:;
#N canvas 548 237 600 507 list-help 0;
#X obj 29 11 list;
#X text 76 12 - building and using variable-length messages;
#N canvas 92 130 654 658 about-lists 0;
#X obj 50 625 print message;
#X msg 50 438 list x.wav 44100;
#X msg 50 596 read \$1 \$2;
#X msg 50 467 set x.wav 44100;
#X msg 67 567 set \, add2 read \, adddollar 1 \, adddollar 2;
#X msg 50 497 x.wav 44100;
#X obj 67 541 loadbang;
#X text 155 544 reset message as it was;
#X text 207 438 good;
#X text 196 469 bad;
#X text 46 25 Messages in Pd are simewhat artificially divided into
two classes. First are data-holding messages (bang \, float \, symbol
\, list) which are the primary way of communicating between objects.
Second is "everything else" (you could call them out-of-band messages
or metamessages) that describe changes in configuration \, read and
write files \, quit Pd \, etc. These are provided so that complex objects
don't need to have 100 separate inlets for every possible functionality.
It's not clear whether this was a good design choice \, but it's entrenched.
;
#X text 162 497 ugly;
#X text 48 183 The distinction becomes visible \, and ugly \, when
the leading item in a data-holding message is a symbol. In this case
\, to disambiguate it from the other sort \, the printed form of the
message has a selector \, "list" or "symbol" prepended to it. Underneath
\, there is always a selector in fromt of data messages \, but it is
implied if the first data item is a number.;
#X msg 411 461 list 44100 x.wav;
#X msg 424 486 44100 x.wav;
#X obj 411 512 print number-first;
#X text 405 433 these two are equivalent:;
#X text 50 294 In the example below \, the top message sets \$1 to
"x.wav" and \$2 to 44100 in the "read" message. The lower message box
outputs the message "read x.wav 44100". The "set" message changes the
content of the message box itself (click on the longer message box
below to repair the damage.) The "ugly" message \, since it is neither
"list" nor "set" \, gets interpreted in an arbitrary (and probably
inappropriate!) way.;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 4 0;
#X connect 13 0 15 0;
#X connect 14 0 15 0;
#X restore 43 324 pd about-lists;
#X text 33 52 There are four list classes:;
#X obj 22 82 list append;
#X obj 22 107 list prepend;
#X obj 22 157 list trim;
#X obj 22 132 list split;
#X text 140 81 - append the second list to the first;
#X text 141 108 - prepend the second list to the first;
#X text 141 133 - split a list in two;
#X text 141 160 - trim the "list" selector off;
#N canvas 186 284 602 409 trim 0;
#X msg 159 239 1 2 3;
#X msg 159 190 list cis boom bah;
#X msg 160 265 bang;
#X msg 159 163 walk the dog;
#X obj 134 341 list trim;
#X obj 134 363 print trim;
#X msg 160 287 1 x y;
#X msg 159 313 x 1 y;
#X text 29 19 trim - convert list to message \, using first item as
selector;
#X msg 159 213 55;
#X text 27 55 The "list trim" object inputs lists (or makes lists out
of incoming non-list messages) and outputs a message whose selector
is the first item of the list \, and whose arguments \, if any \, are
the remainder of the list. If the list has no items \, or if its first
item is numeric \, the selector is "list" (which might print out as
list \, float \, or bang.);
#X connect 0 0 4 0;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 6 0 4 0;
#X connect 7 0 4 0;
#X connect 9 0 4 0;
#X restore 506 160 pd trim;
#X text 501 53 details:;
#X text 499 36 click for;
#N canvas 100 190 608 420 append 0;
#X obj 17 324 list append 1 2;
#X floatatom 17 154 5 0 0 0 - - -;
#X msg 17 129 1 2 3;
#X msg 17 82 list cis boom bah;
#X msg 17 179 bang;
#X msg 176 294 bang;
#X obj 17 353 print append;
#X msg 17 39 walk the dog;
#X msg 176 244 list x y z;
#X msg 175 218 go dog go;
#X msg 174 268 4 5 6 and 7;
#X text 138 37 non-list message converted to list;
#X text 182 77 list starting with symbol;
#X text 181 96 (needs explicit "list" selector);
#X text 69 152 number is one-element list;
#X text 72 129 numeric list;
#X text 67 181 bang is zero-element list;
#X text 270 215 same for right inlet...;
#X text 286 267 (note: only the first item;
#X text 289 286 need be a number to make this;
#X text 289 304 a list.);
#X text 170 325 <- creation args initialize the list to append;
#X text 20 6 Append - append (concatenate) the second list to the first
;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 1;
#X connect 7 0 0 0;
#X connect 8 0 0 1;
#X connect 9 0 0 1;
#X connect 10 0 0 1;
#X restore 506 84 pd append;
#N canvas 391 326 667 561 split 0;
#X msg 103 328 1 2 3;
#X msg 79 231 list cis boom bah;
#X msg 99 263 bang;
#X obj 79 421 list split 2;
#X floatatom 182 396 3 0 5 0 - - -;
#X obj 79 469 print split1;
#X obj 198 470 print split2;
#X msg 79 204 walk the dog;
#X msg 102 306 1 2;
#X msg 100 285 1;
#X msg 103 349 1 2 3 4;
#X msg 103 372 1 2 so are you;
#X obj 320 470 print split3;
#X text 76 488 first n;
#X text 195 489 rest of list;
#X text 317 489 shorter than n;
#X text 218 394 new split point;
#X text 49 25 Split - cut a list into smaller ones;
#X text 210 419 <-- creation arg inits split point;
#X text 201 202 non-list message converted to list;
#X text 245 231 list with three symbols;
#X text 139 288 list with one number;
#X text 177 310 ... etc;
#X text 241 370 <- if the first item is a number \, it's a list.;
#X text 142 262 list with no items;
#X text 48 61 The "list split" object takes lists and outputs the first
"n" items (left outlet) and the remaining ones (middle outlet). The
two outputs appear in the usual right-to-left order. In case there
are fewer than "n" items in the list \, it is output (in its entirety)
from the third outlet instead. The creation argument or the inlet sets
the split point.;
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 3 1 6 0;
#X connect 3 2 12 0;
#X connect 4 0 3 1;
#X connect 7 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 3 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X restore 506 134 pd split;
#N canvas 0 22 640 478 prepend 0;
#X floatatom 17 154 5 0 0 0 - - -;
#X msg 17 129 1 2 3;
#X msg 17 82 list cis boom bah;
#X msg 17 179 bang;
#X msg 176 294 bang;
#X obj 17 353 print append;
#X msg 17 39 walk the dog;
#X msg 176 244 list x y z;
#X msg 175 218 go dog go;
#X msg 174 268 4 5 6 and 7;
#X text 138 37 non-list message converted to list;
#X text 182 77 list starting with symbol;
#X text 181 96 (needs explicit "list" selector);
#X text 69 152 number is one-element list;
#X text 72 129 numeric list;
#X text 67 181 bang is zero-element list;
#X text 270 215 same for right inlet...;
#X text 286 267 (note: only the first item;
#X text 289 286 need be a number to make this;
#X text 289 304 a list.);
#X text 20 6 Prepend - prepend the second list to the first;
#X text 171 326 <- creation args initialize the list to prepend;
#X obj 17 324 list prepend 1 2;
#X connect 0 0 22 0;
#X connect 1 0 22 0;
#X connect 2 0 22 0;
#X connect 3 0 22 0;
#X connect 4 0 22 1;
#X connect 6 0 22 0;
#X connect 7 0 22 1;
#X connect 8 0 22 1;
#X connect 9 0 22 1;
#X connect 22 0 5 0;
#X restore 506 109 pd prepend;
#X text 30 241 In general \, inlets that take lists (two each for append/prepend
\, and one each for split and trim) will convert non-list messages
(such as "set 5") to lists (such as "list set 5" automatically. Here's
more about lists in Pd:;
#X text 31 357 And here are some examples showing how to use these
objects to compose and/or use variable length messages:;
#N canvas 381 50 719 646 example1 0;
#X obj 43 173 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 252 176 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 247 154 clear;
#X text 40 153 send;
#X msg 91 175 250;
#X msg 123 175 500;
#X msg 156 175 750;
#X msg 189 175 1000;
#X obj 43 258 list append;
#X obj 208 220 t l;
#X obj 91 214 list prepend;
#X obj 43 426 t l l;
#X obj 94 426 print start;
#X obj 149 257 print stored;
#X obj 43 451 list split 1;
#X obj 43 575 del;
#X obj 43 607 print bang;
#X obj 75 542 list append;
#X msg 55 403 0 250 250 500;
#X text 118 150 -- add --;
#X text 57 20 example 1: simple rhythmic sequencer;
#X text 49 53 The top part of this patch demonstrates building up a
message from a variable number of elements provided sequentially. The
"list prepend" object stores the list and \, each time a number arrives
\, prepends the previous list to it.;
#X text 416 237 "list prepend" to its own inlet.;
#X text 253 220 "trigger list" is needed only to connect outlet of
;
#X text 274 258 printout shows the growing message.;
#X text 67 279 "list append" stores the growing message which is output
by the "send" button above. "list prepend" would have been equivalent.
;
#X text 185 403 <-- test message;
#X text 59 354 The bottom part of the patch takes numbers off the beginning
of the list \, one by one \, to use as delays.;
#X text 210 426 printout shows the sequence as it starts.;
#X text 189 543 The rest of the list is stored for next time.;
#X obj 161 505 print done;
#X text 170 450 Split off the first item. If there is none \, nothing
comes out the first or second outlet \, but instead we get a "bang"
from the third one.;
#X text 84 575 After delay \, output a bang and recall the rest of
the list.;
#X connect 0 0 8 0;
#X connect 1 0 10 1;
#X connect 4 0 10 0;
#X connect 5 0 10 0;
#X connect 6 0 10 0;
#X connect 7 0 10 0;
#X connect 8 0 11 0;
#X connect 9 0 10 1;
#X connect 10 0 9 0;
#X connect 10 0 8 1;
#X connect 10 0 13 0;
#X connect 11 0 14 0;
#X connect 11 1 12 0;
#X connect 14 0 15 0;
#X connect 14 1 17 1;
#X connect 14 2 30 0;
#X connect 15 0 16 0;
#X connect 15 0 17 0;
#X connect 17 0 14 0;
#X connect 18 0 11 0;
#X restore 222 410 pd example1;
#X text 65 409 simple sequencer;
#N canvas 126 39 568 569 example2 0;
#X obj 66 263 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 292 266 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 287 244 clear;
#X text 63 243 send;
#X obj 66 342 list append;
#X obj 213 317 t l;
#X obj 94 303 list prepend;
#X obj 66 410 t l l;
#X obj 121 410 print start;
#X obj 171 340 print stored;
#X obj 66 486 del;
#X obj 105 486 list append;
#X msg 94 264 250 57;
#X msg 154 264 500 52;
#X msg 215 264 750 55;
#X obj 66 461 unpack;
#X obj 66 435 list split 2;
#X text 80 38 example 2: sequencer with pitch;
#X text 147 242 -- add --;
#X obj 185 438 print done;
#X obj 115 517 print pitch;
#X text 13 69 This example is a slight modification of example 1 showing
how to build up lists with more than one item per iteration. We regard
pairs of numbers as specifying a delay time and a pitch. Unlike the
previous example \, the delay here is interpreted as teh delay until
the next event \, not the delay since the previous one. This is done
by taking the "pitch" output before the delay object (previously the
"output" was taken from the delay object's output.);
#X connect 0 0 4 0;
#X connect 1 0 6 1;
#X connect 4 0 7 0;
#X connect 5 0 6 1;
#X connect 6 0 5 0;
#X connect 6 0 4 1;
#X connect 6 0 9 0;
#X connect 7 0 16 0;
#X connect 7 1 8 0;
#X connect 10 0 11 0;
#X connect 11 0 16 0;
#X connect 12 0 6 0;
#X connect 13 0 6 0;
#X connect 14 0 6 0;
#X connect 15 0 10 0;
#X connect 15 1 20 0;
#X connect 16 0 15 0;
#X connect 16 1 11 1;
#X connect 16 2 19 0;
#X restore 222 436 pd example2;
#X text 56 438 another sequencer;
#X text 115 465 serializer;
#N canvas 116 31 673 426 example3 0;
#X obj 19 287 list split 1;
#X obj 19 378 print;
#X obj 19 204 until;
#X obj 19 242 list append;
#X obj 45 171 t b l;
#X obj 149 287 bang;
#X msg 45 148 1 2 3 4 a b c;
#X text 34 21 example 3: serializing a message without delays;
#X text 17 55 The "until" object can be used as shown to iterate through
all the items of a list.;
#X text 178 147 <- click to test;
#X text 101 171 First store list \, then start the loop;
#X text 118 199 "until" bangs its output until told to stop by a "bang"
to its right inlet.;
#X text 137 241 Store the remaining list.;
#X text 194 286 third outlet of "split" tells us to stop.;
#X text 67 318 Second outlet of "split" becomes the new list for "list
append" above.;
#X text 75 377 First outlet is the output.;
#X connect 0 0 1 0;
#X connect 0 1 3 1;
#X connect 0 2 5 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 2 0;
#X connect 4 1 3 1;
#X connect 5 0 2 1;
#X connect 6 0 4 0;
#X restore 222 463 pd example3;
#X obj 23 207 list;
#X text 71 208 - short for "list append";
#X text 141 185 - output number of items in list;
#N canvas 188 111 576 365 length 0;
#X msg 126 183 1 2 3;
#X msg 126 134 list cis boom bah;
#X msg 127 209 bang;
#X msg 126 107 walk the dog;
#X msg 127 231 1 x y;
#X msg 126 257 x 1 y;
#X msg 126 157 55;
#X obj 101 285 list length;
#X floatatom 101 311 5 0 0 0 - - -;
#X text 29 18 length - number of items in list;
#X text 27 55 The "list length" object outputs the number of arguments
in a list or other message.;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X restore 506 186 pd length;
#X text 353 468 updated for Pd version 0.40.;
#X obj 22 182 list length;
#X restore 385 136 pd list-help;
#X msg 133 418 This;
#X msg 174 418 is;
#X msg 206 419 a;
#X msg 159 509;
#X msg 104 481 set;
#X text 52 479 Clear:;
#X obj 159 454 ladd2;
#X text 196 455 <- add items normally;
#X msg 237 419 symbol list;
#X msg 238 259 symbol list;
#X msg 133 538 This;
#X msg 174 538 is;
#X msg 206 539 a;
#X msg 159 629;
#X msg 104 601 set;
#X text 52 599 Clear:;
#X msg 237 539 symbol list;
#X text 196 575 <- add items separated by a comma;
#X obj 159 574 ladd3;
#X text 525 220 Set the contents of a message box with a list;
#X msg 571 252 foo bar baz;
#X msg 659 252 one two three;
#X msg 659 321;
#X obj 659 291 lset;
#X msg 751 251 four five six;
#X msg 586 295 set;
#X text 537 365 Count the number of elements in a list:;
#X msg 620 395 one two three four five six 7;
#N canvas 1159 128 654 658 about-lists 0;
#X obj 50 625 print message;
#X msg 50 438 list x.wav 44100;
#X msg 50 596 read \$1 \$2;
#X msg 50 467 set x.wav 44100;
#X msg 67 567 set \, add2 read \, adddollar 1 \, adddollar 2;
#X msg 50 497 x.wav 44100;
#X obj 67 541 loadbang;
#X text 155 544 reset message as it was;
#X text 207 438 good;
#X text 196 469 bad;
#X text 46 25 Messages in Pd are simewhat artificially divided into
two classes. First are data-holding messages (bang \, float \, symbol
\, list) which are the primary way of communicating between objects.
Second is "everything else" (you could call them out-of-band messages
or metamessages) that describe changes in configuration \, read and
write files \, quit Pd \, etc. These are provided so that complex objects
don't need to have 100 separate inlets for every possible functionality.
It's not clear whether this was a good design choice \, but it's entrenched.
;
#X text 162 497 ugly;
#X text 48 183 The distinction becomes visible \, and ugly \, when
the leading item in a data-holding message is a symbol. In this case
\, to disambiguate it from the other sort \, the printed form of the
message has a selector \, "list" or "symbol" prepended to it. Underneath
\, there is always a selector in fromt of data messages \, but it is
implied if the first data item is a number.;
#X msg 411 461 list 44100 x.wav;
#X msg 424 486 44100 x.wav;
#X obj 411 512 print number-first;
#X text 405 433 these two are equivalent:;
#X text 50 294 In the example below \, the top message sets \$1 to
"x.wav" and \$2 to 44100 in the "read" message. The lower message box
outputs the message "read x.wav 44100". The "set" message changes the
content of the message box itself (click on the longer message box
below to repair the damage.) The "ugly" message \, since it is neither
"list" nor "set" \, gets interpreted in an arbitrary (and probably
inappropriate!) way.;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 4 0;
#X connect 13 0 15 0;
#X connect 14 0 15 0;
#X restore 478 137 pd about-lists;
#X floatatom 599 451 5 0 0 0 - - -;
#X obj 599 425 lcount;
#X msg 547 394 one two;
#X text 571 512 Iterate through a list:;
#X msg 586 548 one two three four five six seven eight;
#X obj 586 580 liter;
#X obj 613 611 print index;
#X obj 586 635 print item;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 4 0;
#X connect 7 0 4 0;
#X connect 10 0 8 0;
#X connect 13 0 19 0;
#X connect 14 0 19 0;
#X connect 15 0 19 0;
#X connect 17 0 16 0;
#X connect 19 0 16 0;
#X connect 21 0 19 0;
#X connect 22 0 4 0;
#X connect 23 0 31 0;
#X connect 24 0 31 0;
#X connect 25 0 31 0;
#X connect 27 0 26 0;
#X connect 29 0 31 0;
#X connect 31 0 26 0;
#X connect 33 0 36 0;
#X connect 34 0 36 0;
#X connect 36 0 35 0;
#X connect 37 0 36 0;
#X connect 38 0 35 0;
#X connect 40 0 43 0;
#X connect 43 0 42 0;
#X connect 44 0 43 0;
#X connect 46 0 47 0;
#X connect 47 0 49 0;
#X connect 47 1 48 0;
#X restore -91 406 pd \$0-lisp1;
#N canvas 335 55 814 717 \$0-lisp2 0;
#X obj 243 22 cnv 15 15 15 empty empty List_Processing_2 20 12 1 32
-262144 -66577 0;
#X text 40 99 Build a list programatically:;
#X obj 128 129 lbuilder-help;
#X obj 60 129 lbuilder;
#X text 42 167 Append an item to the end of each element in a list:
;
#X obj 71 194 lapp;
#X obj 124 197 lapp-help;
#X obj 46 338 lfl!=;
#X text 42 292 Block lists of a certain length:;
#X text 40 310 ("lfl" stands for "list filter length");
#X obj 88 339 lfl<;
#X obj 126 339 lfl<=;
#X obj 168 339 lfl==;
#X obj 209 339 lfl>;
#X obj 245 339 lfl>=;
#X obj 111 367 lfl==-help;
#X obj 87 446 lfor;
#X obj 122 446 lfor-help;
#X text 48 418 For loop over a list (similar to [liter]):;
#X text 52 489 Get or set an index of a list:;
#X obj 68 516 lindexget;
#X obj 133 516 lindexget-help;
#X obj 67 540 lindexset;
#X obj 134 540 lindexset-help;
#X text 406 375 Join each element of a list into a single symbol:;
#X obj 484 400 ljoin;
#X obj 525 400 ljoin-help;
#X text 46 227 Prepend an item to the beginning of each element:;
#X obj 72 249 lpre;
#X obj 123 249 lpre-help;
#X text 408 437 Reverse a list:;
#X obj 474 459 lreverse;
#X obj 536 460 lreverse-help;
#X obj 475 124 lstack;
#X obj 528 124 lstack-help;
#X text 402 97 A stack where each element is a list (or number/symbol):
;
#X text 405 156 A queue where each element is a list (or number/symbol):
;
#X obj 472 188 lqueue;
#X obj 528 187 lqueue-help;
#X text 408 230 Swap the elements in a list of length 2:;
#X obj 479 260 lswap;
#X obj 526 260 lswap-help;
#X text 412 308 Convert a list to a symbol:;
#X obj 480 330 lsymbol;
#X obj 534 331 lsymbol-help;
#X text 412 504 Treat a list as a circular array:;
#X obj 454 536 circularlist;
#X obj 539 535 circularlist-help;
#X restore -89 436 pd \$0-lisp2;
#X obj 65 623 f \$0;
#X obj 453 603 f \$0;
#N canvas 553 99 913 576 \$0-complex 0;
#X obj 280 31 cnv 15 15 15 empty empty Complex_Math 20 12 1 32 -262144
-66577 0;
#X text 267 78 PDX comes with patches that make complex math easier.
They use a list of 2 numbers to represent a complex number \, the first
being the real part and the second being the imaginary part.;
#X obj 336 520 cadd~;
#X text 270 141 There are also a few patches that help with complex
signal math.;
#X obj 681 293 cconj;
#X obj 382 521 cdiv~;
#X obj 438 429 cexp;
#X obj 426 520 cexp~;
#X obj 609 294 cmag;
#X obj 467 520 cmag~;
#X obj 509 521 cmult~;
#X obj 263 253 complex;
#X obj 563 519 csub~;
#X obj 215 328 csymbol;
#X floatatom 302 221 5 0 0 0 - - -;
#X floatatom 263 221 5 0 0 0 - - -;
#X obj 180 252 complex;
#X floatatom 219 220 5 0 0 0 - - -;
#X floatatom 180 220 5 0 0 0 - - -;
#X text 329 250 <- make a complex number;
#X text 518 225 You can also use a list of 2 numbers to make a complex
number:;
#X symbolatom 215 356 10 0 0 0 - - -;
#X text 270 327 <- Convert the result to a symbol;
#X obj 235 277 t b a;
#X text 259 303 <- add them;
#X text 184 200 Re;
#X text 219 200 Im;
#X text 261 202 Re;
#X text 300 202 Im;
#X msg 609 270 3 4;
#X floatatom 609 320 5 0 0 0 - - -;
#X msg 571 271 5 12;
#X obj 681 315 csymbol;
#X symbolatom 681 336 10 0 0 0 - - -;
#X msg 681 270 2 0.4;
#X text 430 368 Other operations:;
#X text 515 405 Division ->;
#X text 481 430 Multiplication ->;
#X text 344 404 Subtraction ->;
#X text 527 293 Magnitude ->;
#X text 720 293 <- Conjugate;
#X text 234 428 Complex Exponent ( e^(i*pi) ) ->;
#X text 345 486 There is also complex signal arithmetic:;
#X obj 593 406 cdiv;
#X obj 215 304 cadd;
#X obj 592 430 cmult;
#X obj 437 404 csub;
#X connect 4 0 32 0;
#X connect 8 0 30 0;
#X connect 11 0 23 0;
#X connect 13 0 21 0;
#X connect 14 0 11 1;
#X connect 15 0 11 0;
#X connect 16 0 44 0;
#X connect 17 0 16 1;
#X connect 18 0 16 0;
#X connect 23 0 44 0;
#X connect 23 1 44 1;
#X connect 29 0 8 0;
#X connect 31 0 8 0;
#X connect 32 0 33 0;
#X connect 34 0 4 0;
#X connect 44 0 13 0;
#X restore -216 254 pd \$0-complex;
#N canvas 606 203 538 274 \$0-trigonometry 0;
#X obj 125 18 cnv 15 15 15 empty empty Trigonometry 20 12 1 32 -262144
-66577 0;
#X text 94 70 There are a lot of extra trigonometry patches. These
are pretty straight-forward:;
#X obj 35 130 cosh;
#X obj 37 154 cosh~;
#X obj 88 129 cot;
#X obj 88 153 cot~;
#X obj 132 128 coth;
#X obj 133 155 coth~;
#X obj 178 127 csc;
#X obj 179 151 csc~;
#X obj 223 129 csch;
#X obj 223 153 csch~;
#X obj 225 210 pi;
#X obj 272 128 sec;
#X obj 270 154 sec~;
#X obj 309 129 sech;
#X obj 311 156 sech~;
#X obj 355 128 sinh;
#X obj 358 154 sinh~;
#X obj 400 127 tan~;
#X obj 435 127 tanh;
#X obj 433 153 tanh~;
#X text 252 213 <- constant;
#X restore -223 283 pd \$0-trigonometry;
#N canvas 632 135 609 585 \$0-evaluate 0;
#X obj 45 15 cnv 15 15 15 empty empty Evaluating_Expressions 20 12
1 32 -262144 -66577 0;
#X text 65 81 [expr] is GPL licenced \, and therefore isn't in libpd
(and can't go on Apple's App Store).;
#X text 66 123 Instead \, pdx has [evaluate] \, which works in a similar
way.;
#X obj 200 481 evaluate;
#X text 67 149 Use a message box to create an expression \, then send
it to [evaluate] to get the result. Parentheses can be used \, but
there MUST be a space before and after each ( and ) for it to work.
;
#X text 74 286 The help file has a lot more info:;
#X obj 291 286 evaluate-help;
#X text 72 222 This does not have a traditional order of operations
— instead \, the result is cumulative starting from left-to-right.
Use parentheses to ensure the correct result.;
#X msg 60 398 2 + 2;
#X obj 200 513 nbx 10 20 -1e+37 1e+37 0 0 empty empty empty 0 -8 0
10 -262144 -1 -1 0 256;
#X floatatom 146 345 5 0 0 0 - - -;
#X floatatom 191 345 5 0 0 0 - - -;
#X obj 146 388 pack 0 0;
#X msg 146 416 \$1 + \$2;
#X text 198 413 <- x + y;
#X obj 191 364 t b f;
#X floatatom 275 345 5 0 0 0 - - -;
#X floatatom 320 345 5 0 0 0 - - -;
#X obj 275 388 pack 0 0;
#X obj 320 364 t b f;
#X msg 275 416 sqrt ( ( \$1 ^ 2 ) + ( \$2 ^ 2 ) );
#X text 475 414 <- sqrt(a^2 + b^2);
#X connect 3 0 9 0;
#X connect 8 0 3 0;
#X connect 10 0 12 0;
#X connect 11 0 15 0;
#X connect 12 0 13 0;
#X connect 13 0 3 0;
#X connect 15 0 12 0;
#X connect 15 1 12 1;
#X connect 16 0 18 0;
#X connect 17 0 19 0;
#X connect 18 0 20 0;
#X connect 19 0 18 0;
#X connect 19 1 18 1;
#X connect 20 0 3 0;
#X restore -213 316 pd \$0-evaluate;
#N canvas 678 85 528 791 \$0-mathtools 0;
#X obj 62 20 cnv 15 15 15 empty empty Other_Math_Tools 20 12 1 32 -262144
-66577 0;
#X obj 65 625 cnv 15 15 15 empty empty Signal_Math_Tools 20 12 1 32
-262144 -66577 0;
#X obj 140 719 !=~;
#X obj 169 718 &&~;
#X obj 196 718 <=~;
#X obj 223 718 ==~;
#X obj 250 718 >=~;
#X obj 277 718 >~;
#X obj 304 718 ||~;
#X text 161 687 Boolean arithmetic:;
#X obj 129 553 f!=;
#X obj 157 553 f<;
#X obj 184 553 f<=;
#X obj 213 553 f==;
#X obj 241 553 f>;
#X obj 270 553 f>=;
#X obj 172 330 round;
#X text 70 90 Exponentially scale a range of numbers:;
#X obj 122 163 expscale 500 3;
#X obj 125 120 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 122 185 5 0 0 0 - - -;
#X floatatom 122 143 5 0 0 0 - - -;
#X obj 279 160 expscale-help;
#X text 77 249 Round a number to the nearest integer:;
#X obj 124 283 hsl 128 15 0 5 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 172 356 5 0 0 0 - - -;
#X floatatom 172 308 5 0 0 0 - - -;
#X obj 248 330 round-help;
#X text 95 523 Filter numbers based on a boolean relationship:;
#X obj 423 553 f> 30;
#X floatatom 423 531 5 0 0 0 - - -;
#X floatatom 423 576 5 0 0 0 - - -;
#X text 370 690 See also:;
#X obj 383 710 bng 15 250 50 0 empty empty Trigonometry 17 7 0 10 -262144
-1 -1;
#X obj 383 743 s pd-\$0-trigonometry;
#X msg 383 726 vis 1;
#X obj 371 726 cnv 1 137 60 empty empty empty 20 12 0 14 -262144 -66577
0;
#X text 80 395 Round a number to the next integer (ceiling function):
;
#X obj 154 414 hsl 128 15 0 5 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 202 487 5 0 0 0 - - -;
#X floatatom 202 439 5 0 0 0 - - -;
#X obj 202 461 ceil;
#X obj 267 461 ceil-help;
#X connect 16 0 25 0;
#X connect 18 0 20 0;
#X connect 19 0 21 0;
#X connect 21 0 18 0;
#X connect 24 0 26 0;
#X connect 26 0 16 0;
#X connect 29 0 31 0;
#X connect 30 0 29 0;
#X connect 33 0 35 0;
#X connect 35 0 34 0;
#X connect 38 0 40 0;
#X connect 40 0 41 0;
#X connect 41 0 39 0;
#X restore -217 360 pd \$0-mathtools;
#X obj 571 267 loadbang;
#X msg 571 293 menuclose;
#X obj 571 320 s pd-keyboard_shortcuts.pd;
#X msg -694 545 obj 237 22 cnv 15 15 15 empty empty General_Tools 20
12 1 32 -262144 -66577 0 \, text 6 8 Page 4 \, obj 52 83 cnv 15 15
15 empty empty Gates_&_Switches 20 12 1 24 -262144 -66577 0 \, text
55 124 Pd-vanilla by default doesn't give you any gates or switches
- instead you have to build them using [spigot]. pdx comes with many
gates & switches along with macro patches that create any size gate
or switch you need. \, obj 663 110 bng 60 250 50 0 empty empty empty
17 7 0 10 -260449 -86277 -1 \, text 64 230 Click the buttons on the
side to open subpatches demonstrating the pdx gate & switch functionality.
\, obj 442 127 cnv 15 15 15 empty empty Click_for_Gates_--> 20 12 1
22 -262144 -66577 0 \, obj 663 207 bng 60 250 50 0 empty empty empty
17 7 0 10 -260449 -86277 -1 \, obj 414 225 cnv 15 15 15 empty empty
Click_for_Switches_--> 20 12 1 22 -262144 -66577 0 \, obj 662 304 bng
60 250 50 0 empty empty empty 17 7 0 10 -260449 -86277 -1 \, obj 325
322 cnv 15 15 15 empty empty Custom_Gates_&_Switches_--> 20 12 1 22
-262144 -66577 0 \, obj 663 187 s pd-\$1-gatedemo \, msg 663 170 vis
1 \, msg 663 267 vis 1 \, obj 663 284 s pd-\$1-switchdemo \, msg 662
364 vis 1 \, obj 662 381 s pd-\$1-gatemakerdemo \, connect 4 0 12 0
\, connect 7 0 13 0 \, connect 9 0 15 0 \, connect 12 0 11 0 \, connect
13 0 14 0 \, connect 15 0 16 0 \,;
#X msg -318 640 obj 237 22 cnv 15 15 15 empty empty General_Tools 20
12 1 32 -262144 -66577 0 \, obj 246 97 bng 60 250 50 0 empty empty
empty 17 7 0 10 -260449 -86277 -1 \, obj 89 116 cnv 15 15 15 empty
empty Counters_--> 20 12 1 22 -262144 -66577 0 \, obj 244 246 bng 60
250 50 0 empty empty empty 17 7 0 10 -260449 -86277 -1 \, obj 7 265
cnv 15 15 15 empty empty More_Misc_Tools_--> 20 12 1 22 -262144 -66577
0 \, msg 246 157 vis 1 \, msg 244 306 vis 1 \, text 6 8 Page 5 \, obj
246 174 s pd-\$1-counterdemo \, text 376 87 [number]: a number box
with a settable minimum & maximum values. It can also toggle between
Int/Float: \, obj 489 129 number \, text 375 180 [number~] is a signal
number box: \, obj 484 204 number~ \, text 370 259 [view~] converts
a signal to a float and shows its current value \, obj 485 296 view~
\, obj 244 323 s pd-\$1-misctooldemo \, connect 1 0 5 0 \, connect
3 0 6 0 \, connect 5 0 8 0 \, connect 6 0 15 0 \,;
#X msg 65 685 obj 237 22 cnv 15 15 15 empty empty General_Tools 20
12 1 32 -262144 -66577 0 \, obj 415 138 bng 60 250 50 0 empty empty
empty 17 7 0 10 -260449 -86277 -1 \, obj 172 156 cnv 15 15 15 empty
empty List_Processing_1_--> 20 12 1 22 -262144 -66577 0 \, msg 415
198 vis 1 \, text 6 8 Page 6 \, obj 415 256 bng 60 250 50 0 empty empty
empty 17 7 0 10 -260449 -86277 -1 \, obj 172 274 cnv 15 15 15 empty
empty List_Processing_2_--> 20 12 1 22 -262144 -66577 0 \, msg 415
316 vis 1 \, obj 415 215 s pd-\$1-lisp1 \, obj 415 333 s pd-\$1-lisp2
\, text 205 73 Patches can often be made simpler by using & manipulating
lists. Pdx comes with many tools that help with this. \, connect 1
0 3 0 \, connect 3 0 8 0 \, connect 5 0 7 0 \, connect 7 0 9 0 \,;
#X msg 453 630 obj 319 22 cnv 15 15 15 empty empty Math 20 12 1 32
-262144 -66577 0 \, obj 266 122 bng 60 250 50 0 empty empty empty 17
7 0 10 -260449 -86277 -1 \, obj 9 138 cnv 15 15 15 empty empty Complex_Numbers_-->
20 12 1 22 -262144 -66577 0 \, msg 266 182 vis 1 \, text 6 8 Page 7
\, obj 266 252 bng 60 250 50 0 empty empty empty 17 7 0 10 -260449
-86277 -1 \, obj 70 270 cnv 15 15 15 empty empty Trigonometry_--> 20
12 1 22 -262144 -66577 0 \, msg 266 312 vis 1 \, obj 632 122 bng 60
250 50 0 empty empty empty 17 7 0 10 -260449 -86277 -1 \, obj 331 139
cnv 15 15 15 empty empty Evaluating_Expressions_--> 20 12 1 22 -262144
-66577 0 \, msg 632 182 vis 1 \, obj 266 199 s pd-\$1-complex \, obj
266 329 s pd-\$1-trigonometry \, obj 632 199 s pd-\$1-evaluate \, obj
632 252 bng 60 250 50 0 empty empty empty 17 7 0 10 -260449 -86277
-1 \, obj 441 270 cnv 15 15 15 empty empty Other_Tools_--> 20 12 1
22 -262144 -66577 0 \, msg 632 312 vis 1 \, obj 632 329 s pd-\$1-mathtools
\, connect 1 0 3 0 \, connect 3 0 11 0 \, connect 5 0 7 0 \, connect
7 0 12 0 \, connect 8 0 10 0 \, connect 10 0 13 0 \, connect 14 0 16
0 \, connect 16 0 17 0 \,;
#X msg -1077 527 obj 226 20 cnv 15 15 15 empty empty Using_with_iOS
20 12 1 32 -262144 -66577 0 \, text 6 8 Page 3 \, text 204 113 To use
pdx in an iOS project you need to import the folder containing all
the patches into your project. This is the folder called "patches"
in the pdx folder. Make sure the "Create Groups" option is selected
- otherwise libpd won't be able to access the patches by default. \,
text 207 208 You should now be able to use any pdx patch in your iOS
project. \, text 208 259 If this didn't work you'll get an error saying
"couldn't create" when it tries to load your patch. \,;
#X obj 838 612 f \$0;
#X msg 838 634 obj 268 21 cnv 15 15 15 empty empty Audio_Tools 20 12
1 32 -262144 -66577 0 \, obj 448 154 bng 60 250 50 0 empty empty empty
17 7 0 10 -260449 -86277 -1 \, obj 197 172 cnv 15 15 15 empty empty
Basic_Audio_Tools_--> 20 12 1 22 -262144 -66577 0 \, msg 448 214 vis
1 \, text 6 8 Page 8 \, obj 448 264 bng 60 250 50 0 empty empty empty
17 7 0 10 -260449 -86277 -1 \, obj 209 282 cnv 15 15 15 empty empty
Visualizing_Audio_--> 20 12 1 22 -262144 -66577 0 \, msg 448 324 vis
1 \, text 210 66 There are a few basic tools that make many aspects
of creating sounds easier as well as patches that help you visualize
what is going on with the audio you're manipulating. \, obj 448 231
s pd-\$1-basicaudiotools \, obj 448 341 s pd-\$1-visualizingaudio \,
connect 1 0 3 0 \, connect 3 0 9 0 \, connect 5 0 7 0 \, connect 7
0 10 0 \,;
#N canvas 693 607 559 303 \$0-basicaudiotools 0;
#X obj 93 122 gain~;
#X obj 131 131 transistor~;
#X obj 131 157 smoothline~;
#X obj 293 99 gate4~;
#X obj 270 202 switch4~;
#X obj 268 151 +~;
#X obj 293 151 -~;
#X obj 318 151 *~;
#X obj 343 151 /~;
#X obj 92 40 number~;
#X obj 96 73 view~;
#X obj 326 61 number~;
#X obj 395 113 number~;
#X obj 234 37 hradio 15 1 0 4 empty empty empty 0 -8 0 10 -262144 -1
-1 0;
#X obj 234 59 + 1;
#X obj 270 230 view~;
#X obj 412 43 switch~;
#X connect 3 0 5 0;
#X connect 3 1 6 0;
#X connect 3 2 7 0;
#X connect 3 3 8 0;
#X connect 4 0 15 0;
#X connect 5 0 4 1;
#X connect 6 0 4 2;
#X connect 7 0 4 3;
#X connect 8 0 4 4;
#X connect 11 0 3 1;
#X connect 12 0 5 1;
#X connect 12 0 6 1;
#X connect 12 0 7 1;
#X connect 12 0 8 1;
#X connect 13 0 14 0;
#X connect 14 0 3 0;
#X connect 14 0 4 0;
#X restore -265 400 pd \$0-basicaudiotools;
#N canvas 743 297 450 300 \$0-visualizingaudio 0;
#X text 128 108 visualizingaudio;
#X obj 147 182 autowaveform~;
#X obj 145 146 autospectrum~;
#X obj 308 133 switch~;
#X restore -265 429 pd \$0-visualizingaudio;
#X obj 1213 620 f \$0;
#N canvas 496 680 450 300 \$0-synthbuildingblocks 0;
#X obj 64 37 hann_table;
#X obj 64 64 sawtooth_table;
#X obj 66 93 sine_table;
#X obj 68 119 square_table;
#X obj 70 151 triangle_table;
#X obj 188 75 voice~;
#X obj 213 114 cleanup~;
#X obj 221 154 remove_dc_offset~;
#X obj 224 181 limit~;
#X obj 214 221 waveforms;
#X obj 80 190 rect~;
#X obj 99 223 volume~;
#X obj 134 194 tri~;
#X obj 246 14 guiadsr;
#X obj 339 102 adsr~;
#X obj 307 210 switch~;
#X restore -269 461 pd \$0-synthbuildingblocks;
#N canvas 333 271 808 788 \$0-audioeffects 0;
#X obj 58 36 chorus~;
#X obj 59 64 chorus~~;
#X obj 219 487 autobiquad~;
#X obj 220 520 autobiquad~~;
#X obj 336 489 sigbiquad_coeff~;
#X obj 337 523 sigbiquad~;
#X obj 460 488 biquad_coefficients;
#X obj 489 534 biquad_response;
#X obj 103 596 guifilter~;
#X obj 249 56 ringmod~;
#X obj 256 91 ringmod~~;
#X obj 332 69 panner~;
#X obj 336 94 panner~~;
#X obj 422 58 pitchshifter~;
#X obj 425 83 pitchbend~;
#X obj 532 56 multitremolo~;
#X obj 533 82 multitremolo~~;
#X obj 529 133 multidelay~;
#X obj 529 172 multidelay~~;
#X obj 151 203 switch~;
#X restore -227 222 pd \$0-audioeffects;
#X msg 1213 641 obj 268 21 cnv 15 15 15 empty empty Synth_Tools 20
12 1 32 -262144 -66577 0 \, obj 405 115 bng 60 250 50 0 empty empty
empty 17 7 0 10 -260449 -86277 -1 \, obj 204 243 cnv 15 15 15 empty
empty Audio_Effects_--> 20 12 1 22 -262144 -66577 0 \, msg 405 175
vis 1 \, obj 405 225 bng 60 250 50 0 empty empty empty 17 7 0 10 -260449
-86277 -1 \, obj 186 133 cnv 15 15 15 empty empty Building_Blocks_-->
20 12 1 22 -262144 -66577 0 \, msg 405 285 vis 1 \, text 6 8 Page 9
\, obj 405 192 s pd-\$1-synthbuildingblocks \, obj 405 302 s pd-\$1-audioeffects
\, connect 1 0 3 0 \, connect 3 0 8 0 \, connect 4 0 6 0 \, connect
6 0 9 0 \,;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 0 0;
#X connect 6 0 3 0;
#X connect 6 1 14 0;
#X connect 7 0 8 0;
#X connect 8 0 12 0;
#X connect 9 0 11 0;
#X connect 10 0 7 0;
#X connect 11 0 45 0;
#X connect 11 1 13 0;
#X connect 13 0 12 0;
#X connect 14 0 2 0;
#X connect 15 0 20 0;
#X connect 16 0 19 0;
#X connect 17 0 21 0;
#X connect 18 0 23 0;
#X connect 19 0 15 0;
#X connect 20 0 24 0;
#X connect 20 1 28 0;
#X connect 20 2 29 0;
#X connect 21 0 15 2;
#X connect 22 0 33 0;
#X connect 23 0 15 1;
#X connect 24 0 22 0;
#X connect 24 1 25 0;
#X connect 24 2 27 0;
#X connect 24 3 26 0;
#X connect 25 0 23 1;
#X connect 26 0 23 1;
#X connect 28 0 21 1;
#X connect 29 0 19 1;
#X connect 30 0 31 0;
#X connect 31 0 15 1;
#X connect 32 0 44 0;
#X connect 32 1 37 0;
#X connect 32 2 64 0;
#X connect 32 3 41 0;
#X connect 32 4 47 0;
#X connect 32 5 51 0;
#X connect 32 6 52 0;
#X connect 32 7 65 0;
#X connect 32 8 69 0;
#X connect 33 0 32 0;
#X connect 33 1 34 0;
#X connect 34 0 35 0;
#X connect 37 0 36 0;
#X connect 41 0 60 0;
#X connect 42 0 43 0;
#X connect 44 0 36 0;
#X connect 45 0 10 0;
#X connect 47 0 61 0;
#X connect 51 0 62 0;
#X connect 52 0 63 0;
#X connect 57 0 58 0;
#X connect 58 0 59 0;
#X connect 60 0 36 0;
#X connect 61 0 36 0;
#X connect 62 0 36 0;
#X connect 63 0 36 0;
#X connect 64 0 36 0;
#X connect 65 0 66 0;
#X connect 66 0 36 0;
#X connect 69 0 72 0;
#X connect 72 0 36 0;
#X restore -21 -116 pd backend;
#N canvas 497 235 807 450 \$0-window 0;
#X coords 0 -1 1 1 750 400 2 0 0;
#X restore 80 33 pd \$0-window;
